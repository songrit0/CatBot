import discord
from discord.ext import commands
import asyncio
import requests
import io

class StockModal(discord.ui.Modal):
    def __init__(self, action_type, stock_manager):
        super().__init__(title=f"üì¶ {action_type}‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤")
        self.action_type = action_type
        self.stock_manager = stock_manager
        
        # Product name input
        self.product_name = discord.ui.TextInput(
            label="‡∏ä‡∏∑‡πà‡∏≠‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤",
            placeholder="‡∏Å‡∏£‡∏≠‡∏Å‡∏ä‡∏∑‡πà‡∏≠‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤...",
            required=True,
            max_length=100
        )
        self.add_item(self.product_name)
        
        # Quantity input
        self.quantity = discord.ui.TextInput(
            label="‡∏à‡∏≥‡∏ô‡∏ß‡∏ô",
            placeholder="‡∏Å‡∏£‡∏≠‡∏Å‡∏à‡∏≥‡∏ô‡∏ß‡∏ô...",
            required=True,
            max_length=10
        )
        self.add_item(self.quantity)
        
        # Unit input (only for add action)
        if action_type == "‡πÄ‡∏û‡∏¥‡πà‡∏°":
            self.unit = discord.ui.TextInput(
                label="‡∏´‡∏ô‡πà‡∏ß‡∏¢",
                placeholder="‡∏Å‡∏£‡∏≠‡∏Å‡∏´‡∏ô‡πà‡∏ß‡∏¢ (‡πÄ‡∏ä‡πà‡∏ô ‡∏ä‡∏¥‡πâ‡∏ô, ‡∏Å‡πâ‡∏≠‡∏ô, ‡∏ñ‡∏∏‡∏á)...",
                required=True,
                max_length=50
            )
            self.add_item(self.unit)
    
    async def on_submit(self, interaction: discord.Interaction):
        await interaction.response.defer()
        
        try:
            product_name = self.product_name.value.strip()
            quantity = int(self.quantity.value)
            
            if self.action_type == "‡πÄ‡∏û‡∏¥‡πà‡∏°":
                unit = self.unit.value.strip()
                success = self.stock_manager.add_stock(product_name, quantity, unit, interaction.user, 0, "", "")
                
                if success:
                    embed = discord.Embed(
                        title="‚úÖ ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à",
                        description=f"‡πÄ‡∏û‡∏¥‡πà‡∏° **{product_name}** ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô **{quantity} {unit}** ‡πÅ‡∏•‡πâ‡∏ß",
                        color=0x2ecc71
                    )
                    embed.set_footer(text=f"‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£‡πÇ‡∏î‡∏¢ {interaction.user}")
                    await interaction.followup.send(embed=embed, view=AdvancedStockView(self.stock_manager))
                else:
                    raise Exception("‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÑ‡∏î‡πâ")
            
            elif self.action_type == "‡∏•‡∏î":
                success, remaining = self.stock_manager.remove_stock(product_name, quantity, interaction.user)
                
                if success:
                    embed = discord.Embed(
                        title="‚úÖ ‡∏•‡∏î‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à",
                        description=f"‡∏•‡∏î **{product_name}** ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô **{quantity}** ‡πÅ‡∏•‡πâ‡∏ß\n‡∏Ñ‡∏á‡πÄ‡∏´‡∏•‡∏∑‡∏≠: **{remaining}**",
                        color=0x2ecc71
                    )
                    
                    if remaining < 5:
                        embed.add_field(
                            name="‚ö†Ô∏è ‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô",
                            value="‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÉ‡∏Å‡∏•‡πâ‡∏´‡∏°‡∏î‡πÅ‡∏•‡πâ‡∏ß ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏ï‡∏¥‡∏°‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤",
                            inline=False
                        )
                    
                    embed.set_footer(text=f"‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£‡πÇ‡∏î‡∏¢ {interaction.user}")
                    await interaction.followup.send(embed=embed, view=AdvancedStockView(self.stock_manager))
                else:
                    raise Exception("‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏•‡∏î‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÑ‡∏î‡πâ")
        
        except ValueError:
            embed = discord.Embed(
                title="‚ùå ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á",
                description="‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÉ‡∏™‡πà‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏õ‡πá‡∏ô‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç",
                color=0xe74c3c
            )
            await interaction.followup.send(embed=embed)
        
        except Exception as e:
            embed = discord.Embed(
                title="‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î",
                description=str(e),
                color=0xe74c3c
            )
            await interaction.followup.send(embed=embed)

class ProductSelectView(discord.ui.View):
    def __init__(self, stock_manager, action_type):
        super().__init__(timeout=300)
        self.stock_manager = stock_manager
        self.action_type = action_type
        
        # Get product list for dropdown
        products = stock_manager.get_all_stock()
        
        if products:
            options = []
            for product in products[:25]:  # Discord limit is 25 options
                quantity = int(product.get('‡∏à‡∏≥‡∏ô‡∏ß‡∏ô', 0))
                emoji = "‚ö†Ô∏è" if quantity < 5 else "‚úÖ"
                options.append(
                    discord.SelectOption(
                        label=f"{product.get('‡∏ä‡∏∑‡πà‡∏≠‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤', '‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏‡∏ä‡∏∑‡πà‡∏≠')} ({quantity} {product.get('‡∏´‡∏ô‡πà‡∏ß‡∏¢', '‡∏ä‡∏¥‡πâ‡∏ô')})",
                        value=product.get('‡∏ä‡∏∑‡πà‡∏≠‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤', ''),
                        emoji=emoji,
                        description=f"‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï: {product.get('‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î', '‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏')}"
                    )
                )
            
            self.product_select = discord.ui.Select(
                placeholder=f"‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£{action_type}...",
                options=options
            )
            self.product_select.callback = self.product_selected
            self.add_item(self.product_select)
        else:
            # No products available
            self.add_item(discord.ui.Button(label="‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÉ‡∏ô‡∏£‡∏∞‡∏ö‡∏ö", disabled=True))
    
    async def product_selected(self, interaction: discord.Interaction):
        selected_product = self.product_select.values[0]
        
        if self.action_type == "‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö":
            product = self.stock_manager.check_stock(selected_product)
            
            if product:
                quantity = int(product.get('‡∏à‡∏≥‡∏ô‡∏ß‡∏ô', 0))
                status_emoji = "‚ö†Ô∏è" if quantity < 5 else "‚úÖ"
                price = float(product.get('‡∏£‡∏≤‡∏Ñ‡∏≤', 0)) if product.get('‡∏£‡∏≤‡∏Ñ‡∏≤') else 0
                
                embed = discord.Embed(
                    title=f"{status_emoji} {product.get('‡∏ä‡∏∑‡πà‡∏≠‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤', '‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏‡∏ä‡∏∑‡πà‡∏≠')}",
                    color=0xe74c3c if quantity < 5 else 0x2ecc71
                )
                
                embed.add_field(name="‡∏à‡∏≥‡∏ô‡∏ß‡∏ô", value=f"{quantity} {product.get('‡∏´‡∏ô‡πà‡∏ß‡∏¢', '‡∏ä‡∏¥‡πâ‡∏ô')}", inline=True)
                if price > 0:
                    embed.add_field(name="‡∏£‡∏≤‡∏Ñ‡∏≤", value=f"{price:,.0f}", inline=True)
                embed.add_field(name="‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î", value=product.get('‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î', '‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏'), inline=True)
                
                if product.get('‡∏Ñ‡∏≥‡∏≠‡∏ò‡∏¥‡∏ö‡∏≤‡∏¢'):
                    embed.add_field(name="‡∏Ñ‡∏≥‡∏≠‡∏ò‡∏¥‡∏ö‡∏≤‡∏¢", value=product.get('‡∏Ñ‡∏≥‡∏≠‡∏ò‡∏¥‡∏ö‡∏≤‡∏¢'), inline=False)
                
                if product.get('‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏ûURL'):
                    embed.set_image(url=product.get('‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏ûURL'))
                
                if quantity < 5:
                    embed.add_field(
                        name="‚ö†Ô∏è ‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô",
                        value="‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÉ‡∏Å‡∏•‡πâ‡∏´‡∏°‡∏î‡πÅ‡∏•‡πâ‡∏ß",
                        inline=False
                    )
                
                await interaction.response.send_message(embed=embed, view=AdvancedStockView(self.stock_manager))
            else:
                embed = discord.Embed(
                    title="‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤",
                    description="‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤",
                    color=0xe74c3c
                )
                await interaction.response.send_message(embed=embed)
        
        elif self.action_type == "‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û":
            # ‡∏™‡∏£‡πâ‡∏≤‡∏á view ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û
            image_view = ImageUploadView(self.stock_manager, selected_product)
            
            embed = discord.Embed(
                title="üì∏ ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤",
                description=f"‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ß‡∏¥‡∏ò‡∏µ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö **{selected_product}**",
                color=0x3498db
            )
            embed.add_field(
                name="üîß ‡∏ß‡∏¥‡∏ò‡∏µ‡∏ó‡∏µ‡πà 1: ‡πÉ‡∏ä‡πâ‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î",
                value=
                "‡∏≠‡∏±‡∏û‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î‡πÉ‡∏ô channel ‡∏ô‡∏µ‡πâ ‡πÅ‡∏•‡πâ‡∏ß‡∏Ñ‡∏•‡∏¥‡∏Å‡∏õ‡∏∏‡πà‡∏° '‡πÉ‡∏ä‡πâ‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î' ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏ä‡πâ‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡∏ó‡∏µ‡πà‡∏™‡πà‡∏á‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î‡πÉ‡∏ô channel ‡∏ô‡∏µ‡πâ",
                inline=False
            )
            embed.add_field(
                name="üîß ‡∏ß‡∏¥‡∏ò‡∏µ‡∏ó‡∏µ‡πà 2: ‡∏™‡πà‡∏á‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡πÉ‡∏´‡∏°‡πà",
                value="‡∏™‡πà‡∏á‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡πÉ‡∏´‡∏°‡πà‡πÉ‡∏ô‡∏ä‡πà‡∏≠‡∏á‡∏ô‡∏µ‡πâ ‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏° `upload: " + selected_product + "`",
                inline=False
            )
            
            await interaction.response.send_message(embed=embed, view=image_view)
        
        else:
            # For add/remove actions, show quantity input modal
            modal = StockModal(self.action_type, self.stock_manager)
            modal.product_name.default = selected_product
            await interaction.response.send_modal(modal)

class AdvancedStockView(discord.ui.View):
    def __init__(self, stock_manager):
        super().__init__(timeout=300)
        self.stock_manager = stock_manager
    
    # @discord.ui.button(label='‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤', style=discord.ButtonStyle.success, emoji='‚ûï')
    # async def add_stock_button(self, interaction: discord.Interaction, button: discord.ui.Button):
    #     modal = StockModal("‡πÄ‡∏û‡∏¥‡πà‡∏°", self.stock_manager)
    #     await interaction.response.send_modal(modal)
    
    @discord.ui.button(label='‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÉ‡∏´‡∏°‡πà', style=discord.ButtonStyle.primary, emoji='üÜï')
    async def create_new_product_button(self, interaction: discord.Interaction, button: discord.ui.Button):
        modal = NewProductModal(self.stock_manager)
        await interaction.response.send_modal(modal)
    
    # @discord.ui.button(label='‡∏•‡∏î‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤', style=discord.ButtonStyle.danger, emoji='‚ûñ')
    # async def remove_stock_button(self, interaction: discord.Interaction, button: discord.ui.Button):
    #     await interaction.response.send_message(
    #         "‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏•‡∏î:",
    #         view=ProductSelectView(self.stock_manager, "‡∏•‡∏î"),
    #         ephemeral=True
    #     )
    
    @discord.ui.button(label='‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤', style=discord.ButtonStyle.secondary, emoji='üîç')
    async def check_stock_button(self, interaction: discord.Interaction, button: discord.ui.Button):
        await interaction.response.send_message(
            "‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö:",
            view=ProductSelectView(self.stock_manager, "‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö"),
            ephemeral=True
        )
    
    @discord.ui.button(label='‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤', style=discord.ButtonStyle.primary, emoji='üì¶')
    async def list_button(self, interaction: discord.Interaction, button: discord.ui.Button):
        await interaction.response.defer()
        
        products = self.stock_manager.get_all_stock()
        
        if not products:
            embed = discord.Embed(
                title="üì¶ ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤",
                description="‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÉ‡∏ô‡∏£‡∏∞‡∏ö‡∏ö",
                color=0xff6b6b
            )
            await interaction.followup.send(embed=embed, view=AdvancedStockView(self.stock_manager))
        else:
            # ‡πÅ‡∏™‡∏î‡∏á‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÄ‡∏õ‡πá‡∏ô card ‡πÅ‡∏¢‡∏Å‡∏ï‡πà‡∏≤‡∏á‡∏´‡∏≤‡∏Å
            await self.show_product_cards(interaction, products)
    
    async def show_product_cards(self, interaction, products):
        """‡πÅ‡∏™‡∏î‡∏á‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÄ‡∏õ‡πá‡∏ô card ‡πÅ‡∏¢‡∏Å‡∏ï‡πà‡∏≤‡∏á‡∏´‡∏≤‡∏Å"""
        try:
            # ‡∏™‡∏£‡πâ‡∏≤‡∏á embed ‡∏´‡∏•‡∏±‡∏Å‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤
            main_embed = discord.Embed(
                title="üè™ ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î",
                description=f"‡∏û‡∏ö‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î {len(products)} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£",
                color=0x4ecdc4
            )
            
            # await interaction.followup.send(embed=main_embed, view=AdvancedStockView(self.stock_manager))
            
            # ‡πÅ‡∏™‡∏î‡∏á‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡πá‡∏ô card
            for product in products[:10]:  # ‡∏à‡∏≥‡∏Å‡∏±‡∏î‡∏ó‡∏µ‡πà 10 ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô spam
                quantity = int(product.get('‡∏à‡∏≥‡∏ô‡∏ß‡∏ô', 0))
                status_emoji = "‚ö†Ô∏è" if quantity < 5 else "‚úÖ"
                price = float(product.get('‡∏£‡∏≤‡∏Ñ‡∏≤', 0)) if product.get('‡∏£‡∏≤‡∏Ñ‡∏≤') else 0
                description = product.get('‡∏Ñ‡∏≥‡∏≠‡∏ò‡∏¥‡∏ö‡∏≤‡∏¢', '')
                image_url = product.get('‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏ûURL', '')
                
                # ‡∏™‡∏£‡πâ‡∏≤‡∏á embed ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤
                card_embed = discord.Embed(
                    title=f"{product.get('‡∏ä‡∏∑‡πà‡∏≠‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤', '‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏‡∏ä‡∏∑‡πà‡∏≠')}",
                    color=0x2ecc71 if quantity >= 5 else 0xe74c3c
                )
                
                # ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏ô‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö card
                card_embed.add_field(
                    name="üí∞ Value",
                    value=f"{price:,.0f}" if price > 0 else "‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏‡∏£‡∏≤‡∏Ñ‡∏≤",
                    inline=True
                )
                
                card_embed.add_field(
                    name="üìã Copy command",
                    value=f"`!buy {product.get('‡∏ä‡∏∑‡πà‡∏≠‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤', '')}`",
                    inline=True
                )
                
                card_embed.add_field(
                    name="üìû Command Channel",
                    value=f"#{interaction.channel.name}",
                    inline=True
                )
                
                if description:
                    card_embed.add_field(
                        name="üìù Description",
                        value=description,
                        inline=False
                    )
                
                # ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏ï‡πá‡∏≠‡∏Å
                card_embed.add_field(
                    name="üì¶ ‡∏™‡∏ï‡πá‡∏≠‡∏Å",
                    value=f"{quantity} {product.get('‡∏´‡∏ô‡πà‡∏ß‡∏¢', '‡∏ä‡∏¥‡πâ‡∏ô')}",
                    inline=True
                )
                
                card_embed.add_field(
                    name="üìÖ ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î",
                    value=product.get('‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î', '‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏'),
                    inline=True
                )
                
                card_embed.add_field(
                    name="üîÑ ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞",
                    value="‚úÖ ‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô" if quantity >= 5 else "‚ö†Ô∏è ‡πÉ‡∏Å‡∏•‡πâ‡∏´‡∏°‡∏î",
                    inline=True
                )
                
                # ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡∏ñ‡πâ‡∏≤‡∏°‡∏µ
                if image_url:
                    card_embed.set_image(url=image_url)
                
                # ‡∏™‡∏£‡πâ‡∏≤‡∏á view ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏õ‡∏∏‡πà‡∏°‡πÉ‡∏ô‡πÅ‡∏ï‡πà‡∏•‡∏∞ card
                card_view = ProductCardView(self.stock_manager, product.get('‡∏ä‡∏∑‡πà‡∏≠‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤', ''))
                
                await interaction.followup.send(embed=card_embed, view=card_view)
                
        except Exception as e:
            error_embed = discord.Embed(
                title="‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î",
                description=f"‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÅ‡∏™‡∏î‡∏á‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÑ‡∏î‡πâ: {str(e)}",
                color=0xe74c3c
            )
            await interaction.followup.send(embed=error_embed)
    @discord.ui.button(label='‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û', style=discord.ButtonStyle.secondary, emoji='üì∏')
    async def add_image_button(self, interaction: discord.Interaction, button: discord.ui.Button):
        await interaction.response.send_message(
            "‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û:",
            view=ProductSelectView(self.stock_manager, "‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û"),
            ephemeral=True
        )
    
    @discord.ui.button(label='‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥', style=discord.ButtonStyle.secondary, emoji='üìã')
    async def history_button(self, interaction: discord.Interaction, button: discord.ui.Button):
        await interaction.response.defer()
        
        history = self.stock_manager.get_history(10)
        
        if not history:
            embed = discord.Embed(
                title="üìã ‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£",
                description="‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£",
                color=0xff6b6b
            )
        else:
            embed = discord.Embed(
                title="üìã ‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£ (10 ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î)",
                color=0xfeca57
            )
            
            for record in reversed(history):
                embed.add_field(
                    name=f"{record.get('‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£', '‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏')} - {record.get('‡∏ä‡∏∑‡πà‡∏≠‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤', '‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏')}",
                    value=f"‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ: {record.get('‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ', '‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏')}\n‡∏à‡∏≥‡∏ô‡∏ß‡∏ô: {record.get('‡∏à‡∏≥‡∏ô‡∏ß‡∏ô', 0)}\n‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà: {record.get('‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà', '‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏')}\n‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏´‡∏ï‡∏∏: {record.get('‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏´‡∏ï‡∏∏', '‡πÑ‡∏°‡πà‡∏°‡∏µ')}",
                    inline=False
                )
        
        await interaction.followup.send(embed=embed, view=AdvancedStockView(self.stock_manager))
    
    @discord.ui.button(label='‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÉ‡∏Å‡∏•‡πâ‡∏´‡∏°‡∏î', style=discord.ButtonStyle.danger, emoji='‚ö†Ô∏è')
    async def low_stock_button(self, interaction: discord.Interaction, button: discord.ui.Button):
        await interaction.response.defer()
        
        low_stock_items = self.stock_manager.check_low_stock()
        
        if not low_stock_items:
            embed = discord.Embed(
                title="‚ö†Ô∏è ‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÉ‡∏Å‡∏•‡πâ‡∏´‡∏°‡∏î",
                description="‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏ó‡∏µ‡πà‡πÉ‡∏Å‡∏•‡πâ‡∏´‡∏°‡∏î",
                color=0x2ecc71
            )
        else:
            embed = discord.Embed(
                title="‚ö†Ô∏è ‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÉ‡∏Å‡∏•‡πâ‡∏´‡∏°‡∏î (‡∏ô‡πâ‡∏≠‡∏¢‡∏Å‡∏ß‡πà‡∏≤ 5 ‡∏ä‡∏¥‡πâ‡∏ô)",
                description="‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏ó‡∏µ‡πà‡∏Ñ‡∏ß‡∏£‡πÄ‡∏ï‡∏¥‡∏°‡πÄ‡∏û‡∏¥‡πà‡∏°",
                color=0xe74c3c
            )
            
            for product in low_stock_items:
                embed.add_field(
                    name=f"üî¥ {product.get('‡∏ä‡∏∑‡πà‡∏≠‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤', '‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏‡∏ä‡∏∑‡πà‡∏≠')}",
                    value=f"‡∏à‡∏≥‡∏ô‡∏ß‡∏ô: {product.get('‡∏à‡∏≥‡∏ô‡∏ß‡∏ô', 0)} {product.get('‡∏´‡∏ô‡πà‡∏ß‡∏¢', '‡∏ä‡∏¥‡πâ‡∏ô')}\n‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï: {product.get('‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î', '‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏')}",
                    inline=True
                )
        
        await interaction.followup.send(embed=embed, view=AdvancedStockView(self.stock_manager))

class ConfirmationView(discord.ui.View):
    def __init__(self, action, product_name, quantity, stock_manager, user):
        super().__init__(timeout=30)
        self.action = action
        self.product_name = product_name
        self.quantity = quantity
        self.stock_manager = stock_manager
        self.user = user
        self.result = None
    
    @discord.ui.button(label='‚úÖ ‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô', style=discord.ButtonStyle.success)
    async def confirm(self, interaction: discord.Interaction, button: discord.ui.Button):
        if interaction.user != self.user:
            await interaction.response.send_message("‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ô‡∏µ‡πâ", ephemeral=True)
            return
        
        self.result = True
        self.stop()
        await interaction.response.send_message("‚úÖ ‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡πÅ‡∏•‡πâ‡∏ß", ephemeral=True)
    
    @discord.ui.button(label='‚ùå ‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å', style=discord.ButtonStyle.danger)
    async def cancel(self, interaction: discord.Interaction, button: discord.ui.Button):
        if interaction.user != self.user:
            await interaction.response.send_message("‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ô‡∏µ‡πâ", ephemeral=True)
            return
        
        self.result = False
        self.stop()
        await interaction.response.send_message("‚ùå ‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡πÅ‡∏•‡πâ‡∏ß", ephemeral=True)

class NewProductModal(discord.ui.Modal):
    def __init__(self, stock_manager):
        super().__init__(title="üÜï ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÉ‡∏´‡∏°‡πà")
        self.stock_manager = stock_manager
        
        # Product name input
        self.product_name = discord.ui.TextInput(
            label="‡∏ä‡∏∑‡πà‡∏≠‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤",
            placeholder="‡∏Å‡∏£‡∏≠‡∏Å‡∏ä‡∏∑‡πà‡∏≠‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤...",
            required=True,
            max_length=100
        )
        self.add_item(self.product_name)
        
        # Quantity input
        self.quantity = discord.ui.TextInput(
            label="‡∏à‡∏≥‡∏ô‡∏ß‡∏ô",
            placeholder="‡∏Å‡∏£‡∏≠‡∏Å‡∏à‡∏≥‡∏ô‡∏ß‡∏ô...",
            required=True,
            max_length=10
        )
        self.add_item(self.quantity)
        
        # Unit input
        self.unit = discord.ui.TextInput(
            label="‡∏´‡∏ô‡πà‡∏ß‡∏¢",
            placeholder="‡∏Å‡∏£‡∏≠‡∏Å‡∏´‡∏ô‡πà‡∏ß‡∏¢ (‡πÄ‡∏ä‡πà‡∏ô ‡∏ä‡∏¥‡πâ‡∏ô, ‡∏Å‡πâ‡∏≠‡∏ô, ‡∏ñ‡∏∏‡∏á)...",
            required=True,
            max_length=50
        )
        self.add_item(self.unit)
        
        # Price input
        self.price = discord.ui.TextInput(
            label="‡∏£‡∏≤‡∏Ñ‡∏≤",
            placeholder="‡∏Å‡∏£‡∏≠‡∏Å‡∏£‡∏≤‡∏Ñ‡∏≤ (‡πÑ‡∏°‡πà‡∏ö‡∏±‡∏á‡∏Ñ‡∏±‡∏ö)...",
            required=False,
            max_length=10
        )
        self.add_item(self.price)
        
        # Description input
        self.description = discord.ui.TextInput(
            label="‡∏Ñ‡∏≥‡∏≠‡∏ò‡∏¥‡∏ö‡∏≤‡∏¢",
            placeholder="‡∏Å‡∏£‡∏≠‡∏Å‡∏Ñ‡∏≥‡∏≠‡∏ò‡∏¥‡∏ö‡∏≤‡∏¢‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤ (‡πÑ‡∏°‡πà‡∏ö‡∏±‡∏á‡∏Ñ‡∏±‡∏ö)...",
            required=False,
            max_length=500,
            style=discord.TextStyle.paragraph
        )
        self.add_item(self.description)
    
    async def on_submit(self, interaction: discord.Interaction):
        await interaction.response.defer()
        
        try:
            product_name = self.product_name.value.strip()
            quantity = int(self.quantity.value)
            unit = self.unit.value.strip()
            price = float(self.price.value) if self.price.value.strip() else 0
            description = self.description.value.strip() if self.description.value else ""
            
            # ‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÉ‡∏´‡πâ‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û
            embed = discord.Embed(
                title="üì∏ ‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤",
                description=f"‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏™‡πà‡∏á‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤ **{product_name}**\n\nüí° ‡∏Ñ‡∏∏‡∏ì‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÅ‡∏ô‡∏ö‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡πÉ‡∏ô‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ñ‡∏±‡∏î‡πÑ‡∏õ‡πÑ‡∏î‡πâ",
                color=0x3498db
            )
            embed.add_field(name="‡∏ä‡∏∑‡πà‡∏≠‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤", value=product_name, inline=True)
            embed.add_field(name="‡∏à‡∏≥‡∏ô‡∏ß‡∏ô", value=f"{quantity} {unit}", inline=True)
            embed.add_field(name="‡∏£‡∏≤‡∏Ñ‡∏≤", value=f"{price:,.0f}" if price > 0 else "‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏", inline=True)
            if description:
                embed.add_field(name="‡∏Ñ‡∏≥‡∏≠‡∏ò‡∏¥‡∏ö‡∏≤‡∏¢", value=description, inline=False)
            
            # ‡πÄ‡∏Å‡πá‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÑ‡∏ß‡πâ‡πÉ‡∏ô pending_image_uploads
            import bot
            bot.pending_image_uploads[str(interaction.user.id)] = {
                'product_name': product_name,
                'quantity': quantity,
                'unit': unit,
                'price': price,
                'description': description
            }
            
            # ‡∏™‡∏£‡πâ‡∏≤‡∏á view ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏£‡∏≠‡∏Å‡∏≤‡∏£‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡∏£‡∏π‡∏õ
            view = ImageUploadView(self.stock_manager, product_name, quantity, unit, price, description)
            
            await interaction.followup.send(embed=embed, view=view)
            
        except ValueError:
            embed = discord.Embed(
                title="‚ùå ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á",
                description="‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÉ‡∏™‡πà‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÅ‡∏•‡∏∞‡∏£‡∏≤‡∏Ñ‡∏≤‡πÄ‡∏õ‡πá‡∏ô‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç",
                color=0xe74c3c
            )
            await interaction.followup.send(embed=embed)
        
        except Exception as e:
            embed = discord.Embed(
                title="‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î",
                description=str(e),
                color=0xe74c3c
            )
            await interaction.followup.send(embed=embed)

class ImageUploadView(discord.ui.View):
    def __init__(self, stock_manager, product_name, quantity=None, unit=None, price=None, description=None):
        super().__init__(timeout=300)
        self.stock_manager = stock_manager
        self.product_name = product_name
        self.quantity = quantity
        self.unit = unit
        self.price = price
        self.description = description
        self.is_new_product = quantity is not None  # ‡∏ñ‡πâ‡∏≤‡∏°‡∏µ quantity ‡πÅ‡∏™‡∏î‡∏á‡∏ß‡πà‡∏≤‡πÄ‡∏õ‡πá‡∏ô‡∏Å‡∏≤‡∏£‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÉ‡∏´‡∏°‡πà
    
    @discord.ui.button(label='‡πÉ‡∏ä‡πâ‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î', style=discord.ButtonStyle.primary, emoji='üì∏')
    async def use_latest_image(self, interaction: discord.Interaction, button: discord.ui.Button):
        await interaction.response.defer()
        
        # ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î‡πÉ‡∏ô channel
        latest_image = await self.find_latest_image_in_channel(interaction.channel)
        
        if latest_image:
            # ‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡∏î‡πâ‡∏ß‡∏¢ Discord CDN
            filename = f"{self.product_name}_{latest_image.filename}"
            image_url = await self.stock_manager.upload_image_to_drive(latest_image.url, filename)
            
            if image_url:
                if self.is_new_product:
                    # ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÉ‡∏´‡∏°‡πà‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û
                    import bot
                    if str(interaction.user.id) in bot.pending_image_uploads:
                        del bot.pending_image_uploads[str(interaction.user.id)]
                    
                    success = self.stock_manager.add_stock(
                        self.product_name, 
                        self.quantity, 
                        self.unit, 
                        interaction.user, 
                        self.price, 
                        self.description, 
                        image_url
                    )
                    
                    if success:
                        embed = discord.Embed(
                            title="‚úÖ ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à",
                            description=f"‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤ **{self.product_name}** ‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß",
                            color=0x2ecc71
                        )
                        embed.set_footer(text=f"‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£‡πÇ‡∏î‡∏¢ {interaction.user}")
                        embed.set_image(url=image_url)
                        await interaction.followup.send(embed=embed, view=AdvancedStockView(self.stock_manager))
                    else:
                        embed = discord.Embed(
                            title="‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î",
                            description="‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÑ‡∏î‡πâ",
                            color=0xe74c3c
                        )
                        await interaction.followup.send(embed=embed)
                else:
                    # ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÄ‡∏î‡∏¥‡∏°
                    products = self.stock_manager.get_all_stock()
                    for product in products:
                        if product['‡∏ä‡∏∑‡πà‡∏≠‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤'].lower() == self.product_name.lower():
                            # ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï URL ‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡πÉ‡∏ô‡∏ä‡∏µ‡∏ï
                            stock_sheet = self.stock_manager.spreadsheet.worksheet('Stock')
                            existing_products = stock_sheet.get_all_records()
                            
                            for i, p in enumerate(existing_products):
                                if p['‡∏ä‡∏∑‡πà‡∏≠‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤'].lower() == self.product_name.lower():
                                    stock_sheet.update(f'G{i+2}', image_url)
                                    break
                            
                            embed = discord.Embed(
                                title="‚úÖ ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à",
                                description=f"‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤ **{self.product_name}** ‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß",
                                color=0x2ecc71
                            )
                            embed.add_field(
                                name="‚ÑπÔ∏è ‡∏£‡∏∞‡∏ö‡∏ö‡∏à‡∏±‡∏î‡πÄ‡∏Å‡πá‡∏ö",
                                value="‡πÉ‡∏ä‡πâ Discord CDN ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏£‡πá‡∏ß‡πÅ‡∏•‡∏∞‡πÄ‡∏™‡∏ñ‡∏µ‡∏¢‡∏£‡∏†‡∏≤‡∏û",
                                inline=False
                            )
                            embed.add_field(
                                name="üì∏ ‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡∏ó‡∏µ‡πà‡πÄ‡∏û‡∏¥‡πà‡∏°",
                                value=f"‡πÉ‡∏ä‡πâ‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î‡∏à‡∏≤‡∏Å {latest_image.filename}",
                                inline=False
                            )
                            embed.set_image(url=image_url)
                            await interaction.followup.send(embed=embed)
                            return
                            
                    embed = discord.Embed(
                        title="‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤",
                        description=f"‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤ **{self.product_name}** ‡πÉ‡∏ô‡∏£‡∏∞‡∏ö‡∏ö",
                        color=0xe74c3c
                    )
                    await interaction.followup.send(embed=embed)
            else:
                embed = discord.Embed(
                    title="‚ùå ‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à",
                    description="‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û",
                    color=0xe74c3c
                )
                await interaction.followup.send(embed=embed)
        else:
            embed = discord.Embed(
                title="‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û",
                description="‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î‡πÉ‡∏ô channel ‡∏ô‡∏µ‡πâ",
                color=0xe74c3c
            )
            embed.add_field(
                name="üí° ‡∏Ñ‡∏≥‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥",
                value="‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏™‡πà‡∏á‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡πÉ‡∏ô‡∏ä‡πà‡∏≠‡∏á‡∏ô‡∏µ‡πâ‡∏Å‡πà‡∏≠‡∏ô ‡∏´‡∏£‡∏∑‡∏≠‡πÉ‡∏ä‡πâ‡∏õ‡∏∏‡πà‡∏° '‡∏Ñ‡∏≥‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡∏Å‡∏≤‡∏£‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î'",
                inline=False
            )
            await interaction.followup.send(embed=embed)
    
    @discord.ui.button(label='‡∏Ñ‡∏≥‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡∏Å‡∏≤‡∏£‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î', style=discord.ButtonStyle.secondary, emoji='üí°')
    async def upload_help(self, interaction: discord.Interaction, button: discord.ui.Button):
        embed = discord.Embed(
            title="üì∏ ‡∏ß‡∏¥‡∏ò‡∏µ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤",
            description=f"‡∏ß‡∏¥‡∏ò‡∏µ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤ **{self.product_name}**",
            color=0x3498db
        )
        
        embed.add_field(
            name="üîß ‡∏ß‡∏¥‡∏ò‡∏µ‡∏ó‡∏µ‡πà 1: ‡πÉ‡∏ä‡πâ‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î",
            value="‡∏≠‡∏±‡∏û‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î‡πÉ‡∏ô channel ‡∏ô‡∏µ‡πâ ‡πÅ‡∏•‡πâ‡∏ß‡∏Ñ‡∏•‡∏¥‡∏Å‡∏õ‡∏∏‡πà‡∏° '‡πÉ‡∏ä‡πâ‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î' ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏ä‡πâ‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡∏ó‡∏µ‡πà‡∏™‡πà‡∏á‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î‡πÉ‡∏ô channel ‡∏ô‡∏µ‡πâ",
            inline=False
        )
        
        embed.add_field(
            name="üîß ‡∏ß‡∏¥‡∏ò‡∏µ‡∏ó‡∏µ‡πà 2: ‡∏™‡πà‡∏á‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡πÉ‡∏´‡∏°‡πà",
            value=f"‡∏™‡πà‡∏á‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡πÉ‡∏´‡∏°‡πà‡πÉ‡∏ô‡∏ä‡πà‡∏≠‡∏á‡∏ô‡∏µ‡πâ ‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏° `upload: {self.product_name}`",
            inline=False
        )
        
        embed.add_field(
            name="üìÅ ‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö‡πÑ‡∏ü‡∏•‡πå",
            value="JPG, PNG, GIF, WEBP",
            inline=True
        )
        
        embed.add_field(
            name="üîó ‡∏£‡∏∞‡∏ö‡∏ö‡∏à‡∏±‡∏î‡πÄ‡∏Å‡πá‡∏ö",
            value="Discord CDN",
            inline=True
        )
        
        await interaction.response.send_message(embed=embed, ephemeral=True)
    
    @discord.ui.button(label='‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÇ‡∏î‡∏¢‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏£‡∏π‡∏õ', style=discord.ButtonStyle.secondary, emoji='üì¶')
    async def create_without_image(self, interaction: discord.Interaction, button: discord.ui.Button):
        if not self.is_new_product:
            embed = discord.Embed(
                title="‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏ó‡∏≥‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡πÑ‡∏î‡πâ",
                description="‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ô‡∏µ‡πâ‡πÉ‡∏ä‡πâ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÉ‡∏´‡∏°‡πà‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô",
                color=0xe74c3c
            )
            await interaction.response.send_message(embed=embed, ephemeral=True)
            return
        
        await interaction.response.defer()
        
        # ‡∏•‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å pending_image_uploads
        import bot
        if str(interaction.user.id) in bot.pending_image_uploads:
            del bot.pending_image_uploads[str(interaction.user.id)]
        
        success = self.stock_manager.add_stock(
            self.product_name, 
            self.quantity, 
            self.unit, 
            interaction.user, 
            self.price, 
            self.description, 
            ""
        )
        
        if success:
            embed = discord.Embed(
                title="‚úÖ ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à",
                description=f"‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤ **{self.product_name}** ‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß",
                color=0x2ecc71
            )
            embed.set_footer(text=f"‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£‡πÇ‡∏î‡∏¢ {interaction.user}")
            await interaction.followup.send(embed=embed, view=AdvancedStockView(self.stock_manager))
        else:
            embed = discord.Embed(
                title="‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î",
                description="‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÑ‡∏î‡πâ",
                color=0xe74c3c
            )
            await interaction.followup.send(embed=embed)
    
    @discord.ui.button(label='‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å', style=discord.ButtonStyle.danger, emoji='‚ùå')
    async def cancel(self, interaction: discord.Interaction, button: discord.ui.Button):
        if self.is_new_product:
            # ‡∏•‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å pending_image_uploads
            import bot
            if str(interaction.user.id) in bot.pending_image_uploads:
                del bot.pending_image_uploads[str(interaction.user.id)]
            
            embed = discord.Embed(
                title="‚ùå ‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡∏Å‡∏≤‡∏£‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤",
                description="‡∏Å‡∏≤‡∏£‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏ñ‡∏π‡∏Å‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å",
                color=0xe74c3c
            )
        else:
            embed = discord.Embed(
                title="‚ùå ‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡∏Å‡∏≤‡∏£‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û",
                description="‡∏Å‡∏≤‡∏£‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡∏ñ‡∏π‡∏Å‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å",
                color=0xe74c3c
            )
        
        await interaction.response.send_message(embed=embed, ephemeral=True)
        self.stop()
    
    async def find_latest_image_in_channel(self, channel, limit=50):
        """‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î‡πÉ‡∏ô channel"""
        try:
            async for message in channel.history(limit=limit):
                if message.attachments:
                    for attachment in message.attachments:
                        if attachment.content_type and attachment.content_type.startswith('image/'):
                            return attachment
            return None
        except Exception as e:
            print(f"‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û: {e}")
            return None

class ProductCardView(discord.ui.View):
    def __init__(self, stock_manager, product_name):
        super().__init__(timeout=300)
        self.stock_manager = stock_manager
        self.product_name = product_name
    
    @discord.ui.button(label='Buy Now', style=discord.ButtonStyle.success, emoji='üí∞')
    async def buy_now(self, interaction: discord.Interaction, button: discord.ui.Button):
        embed = discord.Embed(
            title="üõí ‡∏Å‡∏≤‡∏£‡∏ã‡∏∑‡πâ‡∏≠‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤",
            description=f"‡∏Ñ‡∏∏‡∏ì‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏ã‡∏∑‡πâ‡∏≠ **{self.product_name}** ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà?",
            color=0x2ecc71
        )
        embed.add_field(
            name="üí° ‡∏ß‡∏¥‡∏ò‡∏µ‡∏ã‡∏∑‡πâ‡∏≠",
            value=f"‡πÉ‡∏ä‡πâ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á `!buy {self.product_name}` ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ã‡∏∑‡πâ‡∏≠‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤",
            inline=False
        )
        await interaction.response.send_message(embed=embed, ephemeral=True)
    
    @discord.ui.button(label='Add to cart', style=discord.ButtonStyle.primary, emoji='üõí')
    async def add_to_cart(self, interaction: discord.Interaction, button: discord.ui.Button):
        embed = discord.Embed(
            title="üõí ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏•‡∏á‡∏£‡∏ñ‡πÄ‡∏Ç‡πá‡∏ô",
            description=f"‡πÄ‡∏û‡∏¥‡πà‡∏° **{self.product_name}** ‡∏•‡∏á‡∏£‡∏ñ‡πÄ‡∏Ç‡πá‡∏ô‡πÅ‡∏•‡πâ‡∏ß",
            color=0x3498db
        )
        embed.add_field(
            name="üí° ‡∏Ñ‡∏≥‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥",
            value="‡πÉ‡∏ä‡πâ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á `!cart` ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏î‡∏π‡∏£‡∏ñ‡πÄ‡∏Ç‡πá‡∏ô‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤",
            inline=False
        )
        await interaction.response.send_message(embed=embed, ephemeral=True)
    
    # @discord.ui.button(label='‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û', style=discord.ButtonStyle.secondary, emoji='üì∏')
    # async def add_image(self, interaction: discord.Interaction, button: discord.ui.Button):
    #     await interaction.response.defer()
        
    #     # ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î‡πÉ‡∏ô channel
    #     latest_image = await self.find_latest_image_in_channel(interaction.channel)
        
    #     if latest_image:
    #         # ‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡∏î‡πâ‡∏ß‡∏¢ Discord CDN
    #         filename = f"{self.product_name}_{latest_image.filename}"
    #         image_url = await self.stock_manager.upload_image_to_drive(latest_image.url, filename)
            
    #         if image_url:
    #             # ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏î‡πâ‡∏ß‡∏¢ URL ‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û
    #             products = self.stock_manager.get_all_stock()
    #             for product in products:
    #                 if product['‡∏ä‡∏∑‡πà‡∏≠‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤'].lower() == self.product_name.lower():
    #                     # ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï URL ‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡πÉ‡∏ô‡∏ä‡∏µ‡∏ï
    #                     stock_sheet = self.stock_manager.spreadsheet.worksheet('Stock')
    #                     existing_products = stock_sheet.get_all_records()
                        
    #                     for i, p in enumerate(existing_products):
    #                         if p['‡∏ä‡∏∑‡πà‡∏≠‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤'].lower() == self.product_name.lower():
    #                             stock_sheet.update(f'G{i+2}', image_url)
    #                             break
                        
    #                     embed = discord.Embed(
    #                         title="‚úÖ ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à",
    #                         description=f"‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤ **{self.product_name}** ‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß",
    #                         color=0x2ecc71
    #                     )
    #                     embed.add_field(
    #                         name="‚ÑπÔ∏è ‡∏£‡∏∞‡∏ö‡∏ö‡∏à‡∏±‡∏î‡πÄ‡∏Å‡πá‡∏ö",
    #                         value="‡πÉ‡∏ä‡πâ Discord CDN ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏£‡πá‡∏ß‡πÅ‡∏•‡∏∞‡πÄ‡∏™‡∏ñ‡∏µ‡∏¢‡∏£‡∏†‡∏≤‡∏û",
    #                         inline=False
    #                     )
    #                     embed.add_field(
    #                         name="üì∏ ‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡∏ó‡∏µ‡πà‡πÄ‡∏û‡∏¥‡πà‡∏°",
    #                         value=f"‡πÉ‡∏ä‡πâ‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î‡∏à‡∏≤‡∏Å {latest_image.filename}",
    #                         inline=False
    #                     )
    #                     embed.set_image(url=image_url)
    #                     await interaction.followup.send(embed=embed)
    #                     return
                        
    #             embed = discord.Embed(
    #                 title="‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤",
    #                 description=f"‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤ **{self.product_name}** ‡πÉ‡∏ô‡∏£‡∏∞‡∏ö‡∏ö",
    #                 color=0xe74c3c
    #             )
    #             await interaction.followup.send(embed=embed)
    #         else:
    #             embed = discord.Embed(
    #                 title="‚ùå ‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à",
    #                 description="‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û",
    #                 color=0xe74c3c
    #             )
    #             await interaction.followup.send(embed=embed)
    #     else:
    #         embed = discord.Embed(
    #             title="‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û",
    #             description="‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î‡πÉ‡∏ô channel ‡∏ô‡∏µ‡πâ",
    #             color=0xe74c3c
    #         )
    #         embed.add_field(
    #             name="üí° ‡∏Ñ‡∏≥‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥",
    #             value="‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏™‡πà‡∏á‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡πÉ‡∏ô‡∏ä‡πà‡∏≠‡∏á‡∏ô‡∏µ‡πâ‡∏Å‡πà‡∏≠‡∏ô ‡∏´‡∏£‡∏∑‡∏≠‡πÉ‡∏ä‡πâ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á `upload: ‡∏ä‡∏∑‡πà‡∏≠‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤` ‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÅ‡∏ô‡∏ö‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û",
    #             inline=False
    #         )
    #         await interaction.followup.send(embed=embed)
    
    async def find_latest_image_in_channel(self, channel, limit=50):
        """‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î‡πÉ‡∏ô channel"""
        try:
            async for message in channel.history(limit=limit):
                if message.attachments:
                    for attachment in message.attachments:
                        if attachment.content_type and attachment.content_type.startswith('image/'):
                            return attachment
            return None
        except Exception as e:
            print(f"‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û: {e}")
            return None
    
    @discord.ui.button(label='Checkout', style=discord.ButtonStyle.secondary, emoji='üí≥')
    async def checkout(self, interaction: discord.Interaction, button: discord.ui.Button):
        embed = discord.Embed(
            title="üí≥ ‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô",
            description=f"‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö **{self.product_name}**",
            color=0x9b59b6
        )
        embed.add_field(
            name="üí° ‡∏Å‡∏≤‡∏£‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô",
            value="‡∏£‡∏∞‡∏ö‡∏ö‡∏Å‡∏≤‡∏£‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô‡∏à‡∏∞‡πÄ‡∏õ‡∏¥‡∏î‡πÉ‡∏´‡πâ‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£‡πÉ‡∏ô‡πÄ‡∏£‡πá‡∏ß‡πÜ ‡∏ô‡∏µ‡πâ",
            inline=False
        )
        await interaction.response.send_message(embed=embed, ephemeral=True)

    @discord.ui.button(label='‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û', style=discord.ButtonStyle.secondary, emoji='üì∏', row=1)
    async def add_image_button(self, interaction: discord.Interaction, button: discord.ui.Button):
        await interaction.response.send_message(
            "‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û:",
            view=ProductSelectView(self.stock_manager, "‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û"),
            ephemeral=True
        )
