import discord
from discord.ui import View, Button, Modal, TextInput, Select
from datetime import datetime
import json
import os
import asyncio

# ID ‡∏Ç‡∏≠‡∏á‡∏ä‡πà‡∏≠‡∏á‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÉ‡∏ö‡πÄ‡∏™‡∏£‡πá‡∏à
BILL_HISTORY_CHANNEL_ID = 1393184006748635156

# ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ä‡πà‡∏ß‡∏¢‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏•‡∏ö‡∏´‡πâ‡∏≠‡∏á‡∏´‡∏•‡∏±‡∏á‡πÅ‡∏™‡∏î‡∏á‡πÉ‡∏ö‡πÄ‡∏™‡∏£‡πá‡∏à‡∏Å‡∏≤‡∏£‡∏Ç‡∏≤‡∏¢
async def remove_seller_permission(interaction, seller_user):
    """‡∏•‡∏ö‡∏´‡πâ‡∏≠‡∏á‡∏´‡∏•‡∏±‡∏á‡πÅ‡∏™‡∏î‡∏á‡πÉ‡∏ö‡πÄ‡∏™‡∏£‡πá‡∏à‡∏Å‡∏≤‡∏£‡∏Ç‡∏≤‡∏¢"""
    try:
        # ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡πÄ‡∏õ‡πá‡∏ô‡∏´‡πâ‡∏≠‡∏á‡∏ó‡∏µ‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏•‡∏ö‡πÑ‡∏î‡πâ
        if isinstance(interaction.channel, discord.TextChannel):
            # ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡πÄ‡∏õ‡πá‡∏ô‡∏´‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏Ç‡∏≤‡∏¢‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
            if interaction.channel.name.startswith("‡∏Å‡∏≤‡∏£‡∏Ç‡∏≤‡∏¢-"):
                # ‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏Å‡πà‡∏≠‡∏ô‡∏•‡∏ö‡∏´‡πâ‡∏≠‡∏á
                try:
                    embed = discord.Embed(
                        title="ÔøΩÔ∏è ‡∏´‡πâ‡∏≠‡∏á‡∏à‡∏∞‡∏ñ‡∏π‡∏Å‡∏•‡∏ö‡πÉ‡∏ô 10 ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ",
                        description=f"‡∏´‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏Ç‡∏≤‡∏¢‡∏Ç‡∏≠‡∏á {seller_user.mention} ‡∏à‡∏∞‡∏ñ‡∏π‡∏Å‡∏•‡∏ö‡∏´‡∏•‡∏±‡∏á‡∏à‡∏≤‡∏Å‡∏Å‡∏≤‡∏£‡∏Ç‡∏≤‡∏¢‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô",
                        color=0xff6b6b
                    )
                    embed.add_field(
                        name="üìù ‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏´‡∏ï‡∏∏",
                        value="‡∏ô‡∏µ‡πà‡πÄ‡∏õ‡πá‡∏ô‡∏Å‡∏≤‡∏£‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥‡∏´‡∏•‡∏±‡∏á‡∏à‡∏≤‡∏Å‡πÅ‡∏™‡∏î‡∏á‡πÉ‡∏ö‡πÄ‡∏™‡∏£‡πá‡∏à‡∏Å‡∏≤‡∏£‡∏Ç‡∏≤‡∏¢",
                        inline=False
                    )
                    await interaction.followup.send(embed=embed, ephemeral=False)
                    
                    # ‡∏£‡∏≠ 10 ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ ‡πÅ‡∏•‡πâ‡∏ß‡∏•‡∏ö‡∏´‡πâ‡∏≠‡∏á
                    await asyncio.sleep(10)
                    await interaction.channel.delete(reason="‡∏•‡∏ö‡∏´‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏Ç‡∏≤‡∏¢‡∏´‡∏•‡∏±‡∏á‡∏à‡∏≤‡∏Å‡∏Å‡∏≤‡∏£‡∏Ç‡∏≤‡∏¢‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô")
                    print(f"‚úÖ ‡∏•‡∏ö‡∏´‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏Ç‡∏≤‡∏¢ {interaction.channel.name} ({interaction.channel.id}) ‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß")
                    
                except Exception as e:
                    print(f"‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏•‡∏ö‡∏´‡πâ‡∏≠‡∏á‡πÑ‡∏î‡πâ: {e}")
            else:
                print(f"‚ùå ‡∏´‡πâ‡∏≠‡∏á‡∏ô‡∏µ‡πâ‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà‡∏´‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏Ç‡∏≤‡∏¢: {interaction.channel.name}")
            
        else:
            print(f"‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏•‡∏ö‡∏´‡πâ‡∏≠‡∏á‡πÑ‡∏î‡πâ: ‡∏´‡πâ‡∏≠‡∏á‡∏ô‡∏µ‡πâ‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà TextChannel")
            
    except discord.Forbidden:
        print(f"‚ùå ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏•‡∏ö‡∏´‡πâ‡∏≠‡∏á {interaction.channel.name}")
    except Exception as e:
        print(f"‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏•‡∏ö‡∏´‡πâ‡∏≠‡∏á: {e}")

class ProductCardView(discord.ui.View):
    def __init__(self, product, stock_manager, timeout=300):
        super().__init__(timeout=timeout)
        self.product = product
        self.stock_manager = stock_manager
        
    @discord.ui.button(label="üõí ‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏Ç‡πâ‡∏≤‡∏£‡∏ñ‡πÄ‡∏Ç‡πá‡∏ô", style=discord.ButtonStyle.primary, emoji="üõí")
    async def add_to_cart(self, interaction: discord.Interaction, button: discord.ui.Button):
        """‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÄ‡∏Ç‡πâ‡∏≤‡∏£‡∏ñ‡πÄ‡∏Ç‡πá‡∏ô"""
        await interaction.response.send_modal(AddToCartModal(self.product, self.stock_manager))
    
    @discord.ui.button(label="üí≥ ‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô", style=discord.ButtonStyle.success, emoji="üí≥")
    async def quick_buy(self, interaction: discord.Interaction, button: discord.ui.Button):
        """‡∏ã‡∏∑‡πâ‡∏≠‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏ó‡∏±‡∏ô‡∏ó‡∏µ"""
        await interaction.response.send_modal(QuickBuyModal(self.product, self.stock_manager))
    
    @discord.ui.button(label="üõí ‡∏î‡∏π‡∏£‡∏ñ‡πÄ‡∏Ç‡πá‡∏ô", style=discord.ButtonStyle.secondary, emoji="üõí")
    async def view_cart(self, interaction: discord.Interaction, button: discord.ui.Button):
        """‡∏î‡∏π‡∏£‡∏ñ‡πÄ‡∏Ç‡πá‡∏ô‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤"""
        await interaction.response.defer()
        
        # Import ‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏´‡∏•‡∏µ‡∏Å‡πÄ‡∏•‡∏µ‡πà‡∏¢‡∏á circular import
        from bot import user_carts, Cart
        
        user_id = str(interaction.user.id)
        if user_id not in user_carts or not user_carts[user_id].get_items():
            embed = discord.Embed(
                title="üõí ‡∏£‡∏ñ‡πÄ‡∏Ç‡πá‡∏ô‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì",
                description="‡∏£‡∏ñ‡πÄ‡∏Ç‡πá‡∏ô‡∏ß‡πà‡∏≤‡∏á‡πÄ‡∏õ‡∏•‡πà‡∏≤",
                color=0xff6b6b
            )
            embed.add_field(
                name="üí° ‡∏Ñ‡∏≥‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥",
                value="‡πÉ‡∏ä‡πâ‡∏õ‡∏∏‡πà‡∏° \"üõí ‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏Ç‡πâ‡∏≤‡∏£‡∏ñ‡πÄ‡∏Ç‡πá‡∏ô\" ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤",
                inline=False
            )
            await interaction.followup.send(embed=embed, ephemeral=True)
            return
        
        cart = user_carts[user_id]
        items = cart.get_items()
        total = cart.get_total()
        
        embed = discord.Embed(
            title="üõí ‡∏£‡∏ñ‡πÄ‡∏Ç‡πá‡∏ô‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì",
            description=f"‡∏°‡∏µ‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤ {len(items)} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£",
            color=0x3498db
        )
        
        cart_text = ""
        for i, item in enumerate(items, 1):
            item_total = item['price'] * item['quantity']
            cart_text += f"{i}. **{item['product_name']}** x{item['quantity']} {item['unit']} = {item_total:,.0f} ‡∏ö‡∏≤‡∏ó\n"
        
        embed.add_field(
            name="üì¶ ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤",
            value=cart_text,
            inline=False
        )
        
        embed.add_field(
            name="üí∞ ‡∏¢‡∏≠‡∏î‡∏£‡∏ß‡∏°‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î",
            value=f"{total:,.0f} ‡∏ö‡∏≤‡∏ó",
            inline=False
        )
        
        # ‡∏™‡∏£‡πâ‡∏≤‡∏á View ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏£‡∏ñ‡πÄ‡∏Ç‡πá‡∏ô
        cart_view = CartManageView(user_id)
        
        await interaction.followup.send(embed=embed, view=cart_view, ephemeral=True)
    
    @discord.ui.button(label="üóëÔ∏è ‡πÄ‡∏Ñ‡∏•‡∏µ‡∏¢‡∏£‡πå‡∏£‡∏ñ‡πÄ‡∏Ç‡πá‡∏ô", style=discord.ButtonStyle.danger, emoji="üóëÔ∏è")
    async def clear_cart(self, interaction: discord.Interaction, button: discord.ui.Button):
        """‡πÄ‡∏Ñ‡∏•‡∏µ‡∏¢‡∏£‡πå‡∏£‡∏ñ‡πÄ‡∏Ç‡πá‡∏ô‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤"""
        await interaction.response.defer()
        
        # Import ‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏´‡∏•‡∏µ‡∏Å‡πÄ‡∏•‡∏µ‡πà‡∏¢‡∏á circular import
        from bot import user_carts, Cart
        
        user_id = str(interaction.user.id)
        if user_id not in user_carts or not user_carts[user_id].get_items():
            embed = discord.Embed(
                title="üõí ‡∏£‡∏ñ‡πÄ‡∏Ç‡πá‡∏ô‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì",
                description="‡∏£‡∏ñ‡πÄ‡∏Ç‡πá‡∏ô‡∏ß‡πà‡∏≤‡∏á‡πÄ‡∏õ‡∏•‡πà‡∏≤‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß",
                color=0xff6b6b
            )
            await interaction.followup.send(embed=embed, ephemeral=True)
            return
        
        # ‡πÅ‡∏™‡∏î‡∏á‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏Å‡πà‡∏≠‡∏ô‡πÄ‡∏Ñ‡∏•‡∏µ‡∏¢‡∏£‡πå
        embed = discord.Embed(
            title="‚ö†Ô∏è ‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏Ñ‡∏•‡∏µ‡∏¢‡∏£‡πå‡∏£‡∏ñ‡πÄ‡∏Ç‡πá‡∏ô",
            description="‡∏Ñ‡∏∏‡∏ì‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÄ‡∏Ñ‡∏•‡∏µ‡∏¢‡∏£‡πå‡∏£‡∏ñ‡πÄ‡∏Ç‡πá‡∏ô‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà?",
            color=0xf39c12
        )
        
        view = ClearCartConfirmView(user_id)
        await interaction.followup.send(embed=embed, view=view, ephemeral=True)

class AddToCartModal(discord.ui.Modal):
    def __init__(self, product, stock_manager):
        super().__init__(title=f"‡πÄ‡∏û‡∏¥‡πà‡∏° {product.get('‡∏ä‡∏∑‡πà‡∏≠‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤', '‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤')} ‡πÄ‡∏Ç‡πâ‡∏≤‡∏£‡∏ñ‡πÄ‡∏Ç‡πá‡∏ô")
        self.product = product
        self.stock_manager = stock_manager
        
        # ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô
        max_stock = int(product.get('‡∏à‡∏≥‡∏ô‡∏ß‡∏ô', 0))
        
        self.quantity = discord.ui.TextInput(
            label="‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£",
            placeholder=f"‡πÉ‡∏™‡πà‡∏à‡∏≥‡∏ô‡∏ß‡∏ô (‡∏°‡∏µ‡∏™‡∏ï‡πá‡∏≠‡∏Å {max_stock} {product.get('‡∏´‡∏ô‡πà‡∏ß‡∏¢', '‡∏ä‡∏¥‡πâ‡∏ô')})",
            min_length=1,
            max_length=10,
            default="1"
        )
        self.add_item(self.quantity)
    
    async def on_submit(self, interaction: discord.Interaction):
        await interaction.response.defer()
        
        try:
            quantity = int(self.quantity.value)
            if quantity <= 0:
                embed = discord.Embed(
                    title="‚ùå ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á",
                    description="‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ï‡πâ‡∏≠‡∏á‡∏°‡∏≤‡∏Å‡∏Å‡∏ß‡πà‡∏≤ 0",
                    color=0xe74c3c
                )
                await interaction.followup.send(embed=embed, ephemeral=True)
                return
            
            # Import ‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏´‡∏•‡∏µ‡∏Å‡πÄ‡∏•‡∏µ‡πà‡∏¢‡∏á circular import
            from bot import add_item_to_cart_helper
            
            user_id = str(interaction.user.id)
            product_name = self.product.get('‡∏ä‡∏∑‡πà‡∏≠‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤', '')
            
            result = await add_item_to_cart_helper(user_id, product_name, quantity)
            
            if result['success']:
                embed = discord.Embed(
                    title="‚úÖ ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏•‡∏á‡∏£‡∏ñ‡πÄ‡∏Ç‡πá‡∏ô‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à",
                    description=f"‡πÄ‡∏û‡∏¥‡πà‡∏° **{product_name}** x{quantity} ‡πÄ‡∏Ç‡πâ‡∏≤‡∏£‡∏ñ‡πÄ‡∏Ç‡πá‡∏ô‡πÅ‡∏•‡πâ‡∏ß!",
                    color=0x2ecc71
                )
                
                embed.add_field(
                    name="üí∞ ‡∏¢‡∏≠‡∏î‡∏£‡∏ß‡∏°‡πÉ‡∏ô‡∏£‡∏ñ‡πÄ‡∏Ç‡πá‡∏ô",
                    value=f"{result['total_price']:,.0f} ‡∏ö‡∏≤‡∏ó",
                    inline=True
                )
                
                embed.add_field(
                    name="üì¶ ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î",
                    value=f"{len(result['cart_items'])} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£",
                    inline=True
                )
                
                await interaction.followup.send(embed=embed, ephemeral=True)
            else:
                embed = discord.Embed(
                    title="‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î",
                    description=result['message'],
                    color=0xe74c3c
                )
                
                if result['error_type'] == 'insufficient_stock':
                    embed.add_field(
                        name="üìâ ‡∏™‡∏ï‡πá‡∏≠‡∏Å‡πÑ‡∏°‡πà‡πÄ‡∏û‡∏µ‡∏¢‡∏á‡∏û‡∏≠",
                        value=f"‡∏°‡∏µ‡∏™‡∏ï‡πá‡∏≠‡∏Å‡πÄ‡∏û‡∏µ‡∏¢‡∏á {result['available_quantity']} {result['unit']}",
                        inline=False
                    )
                
                await interaction.followup.send(embed=embed, ephemeral=True)
                
        except ValueError:
            embed = discord.Embed(
                title="‚ùå ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á",
                description="‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÉ‡∏™‡πà‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á",
                color=0xe74c3c
            )
            await interaction.followup.send(embed=embed, ephemeral=True)
        except Exception as e:
            embed = discord.Embed(
                title="‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î",
                description=f"‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: {str(e)}",
                color=0xe74c3c
            )
            await interaction.followup.send(embed=embed, ephemeral=True)

class QuickBuyModal(discord.ui.Modal):
    def __init__(self, product, stock_manager):
        super().__init__(title=f"‡∏ã‡∏∑‡πâ‡∏≠ {product.get('‡∏ä‡∏∑‡πà‡∏≠‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤', '‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤')} ‡∏ó‡∏±‡∏ô‡∏ó‡∏µ")
        self.product = product
        self.stock_manager = stock_manager
        
        # ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô
        max_stock = int(product.get('‡∏à‡∏≥‡∏ô‡∏ß‡∏ô', 0))
        
        self.quantity = discord.ui.TextInput(
            label="‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏ã‡∏∑‡πâ‡∏≠",
            placeholder=f"‡πÉ‡∏™‡πà‡∏à‡∏≥‡∏ô‡∏ß‡∏ô (‡∏°‡∏µ‡∏™‡∏ï‡πá‡∏≠‡∏Å {max_stock} {product.get('‡∏´‡∏ô‡πà‡∏ß‡∏¢', '‡∏ä‡∏¥‡πâ‡∏ô')})",
            min_length=1,
            max_length=10,
            default="1"
        )
        self.add_item(self.quantity)
        
        self.notes = discord.ui.TextInput(
            label="‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏´‡∏ï‡∏∏ (‡∏ñ‡πâ‡∏≤‡∏°‡∏µ)",
            placeholder="‡πÉ‡∏™‡πà‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏´‡∏ï‡∏∏‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏ã‡∏∑‡πâ‡∏≠ (‡πÑ‡∏°‡πà‡∏à‡∏≥‡πÄ‡∏õ‡πá‡∏ô)",
            required=False,
            max_length=200
        )
        self.add_item(self.notes)
    
    async def on_submit(self, interaction: discord.Interaction):
        await interaction.response.defer()
        
        try:
            quantity = int(self.quantity.value)
            if quantity <= 0:
                embed = discord.Embed(
                    title="‚ùå ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á",
                    description="‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ï‡πâ‡∏≠‡∏á‡∏°‡∏≤‡∏Å‡∏Å‡∏ß‡πà‡∏≤ 0",
                    color=0xe74c3c
                )
                await interaction.followup.send(embed=embed, ephemeral=True)
                return
            
            # ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏™‡∏ï‡πá‡∏≠‡∏Å
            available_quantity = int(self.product.get('‡∏à‡∏≥‡∏ô‡∏ß‡∏ô', 0))
            if available_quantity < quantity:
                embed = discord.Embed(
                    title="‚ùå ‡∏™‡∏ï‡πá‡∏≠‡∏Å‡πÑ‡∏°‡πà‡πÄ‡∏û‡∏µ‡∏¢‡∏á‡∏û‡∏≠",
                    description=f"‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤ **{self.product.get('‡∏ä‡∏∑‡πà‡∏≠‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤', '')}** ‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡πÄ‡∏û‡∏µ‡∏¢‡∏á {available_quantity} {self.product.get('‡∏´‡∏ô‡πà‡∏ß‡∏¢', '‡∏ä‡∏¥‡πâ‡∏ô')}",
                    color=0xe74c3c
                )
                await interaction.followup.send(embed=embed, ephemeral=True)
                return
            
            # ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÉ‡∏ö‡πÄ‡∏™‡∏£‡πá‡∏à
            bill_items = [{
                'name': self.product.get('‡∏ä‡∏∑‡πà‡∏≠‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤', ''),
                'quantity': quantity,
                'price': float(self.product.get('‡∏£‡∏≤‡∏Ñ‡∏≤', 0)),
                'unit': self.product.get('‡∏´‡∏ô‡πà‡∏ß‡∏¢', '‡∏ä‡∏¥‡πâ‡∏ô')
            }]
            
            # ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÉ‡∏ö‡πÄ‡∏™‡∏£‡πá‡∏à
            bill_number, total_amount = self.stock_manager.create_bill(
                interaction.user,
                bill_items,
                self.notes.value or "‡∏ã‡∏∑‡πâ‡∏≠‡∏ó‡∏±‡∏ô‡∏ó‡∏µ (Quick Buy)"
            )
            
            if bill_number:
                # ‡∏™‡∏£‡πâ‡∏≤‡∏á embed ‡πÉ‡∏ö‡πÄ‡∏™‡∏£‡πá‡∏à
                embed = discord.Embed(
                    title="üßæ ‡πÉ‡∏ö‡πÄ‡∏™‡∏£‡πá‡∏à‡∏Å‡∏≤‡∏£‡∏ã‡∏∑‡πâ‡∏≠",
                    description=f"‡πÄ‡∏•‡∏Ç‡∏ó‡∏µ‡πà‡πÉ‡∏ö‡πÄ‡∏™‡∏£‡πá‡∏à: **{bill_number}**",
                    color=0x2ecc71
                )
                
                embed.add_field(
                    name="üë§ ‡∏ú‡∏π‡πâ‡∏ã‡∏∑‡πâ‡∏≠",
                    value=f"{interaction.user.mention}",
                    inline=True
                )
                
                embed.add_field(
                    name="üì¶ ‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤",
                    value=f"{self.product.get('‡∏ä‡∏∑‡πà‡∏≠‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤', '')} x {quantity} {self.product.get('‡∏´‡∏ô‡πà‡∏ß‡∏¢', '‡∏ä‡∏¥‡πâ‡∏ô')}",
                    inline=True
                )
                
                embed.add_field(
                    name="üí∞ ‡∏¢‡∏≠‡∏î‡∏£‡∏ß‡∏°",
                    value=f"{total_amount:,.0f} ‡∏ö‡∏≤‡∏ó",
                    inline=True
                )
                
                if self.notes.value:
                    embed.add_field(
                        name="üìù ‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏´‡∏ï‡∏∏",
                        value=self.notes.value,
                        inline=False
                    )
                
                embed.set_footer(text=f"‡πÉ‡∏ö‡πÄ‡∏™‡∏£‡πá‡∏à‡πÄ‡∏•‡∏Ç‡∏ó‡∏µ‡πà: {bill_number}")
                
                await interaction.followup.send(embed=embed, ephemeral=True)
                
                # ‡∏™‡πà‡∏á‡∏•‡πá‡∏≠‡∏Å‡πÑ‡∏õ‡∏¢‡∏±‡∏á‡∏ä‡πà‡∏≠‡∏á‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÉ‡∏ö‡πÄ‡∏™‡∏£‡πá‡∏à
                try:
                    # ‡∏™‡πà‡∏á‡πÑ‡∏õ‡∏¢‡∏±‡∏á‡∏ä‡πà‡∏≠‡∏á‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÉ‡∏ö‡πÄ‡∏™‡∏£‡πá‡∏à (ID: 1393184006748635156)
                    bill_channel = interaction.client.get_channel(BILL_HISTORY_CHANNEL_ID)
                    if bill_channel:
                        log_embed = discord.Embed(
                            title="üõí ‡∏Å‡∏≤‡∏£‡∏ã‡∏∑‡πâ‡∏≠‡∏ó‡∏±‡∏ô‡∏ó‡∏µ (Quick Buy)",
                            description=f"‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡∏ã‡∏∑‡πâ‡∏≠‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏ó‡∏±‡∏ô‡∏ó‡∏µ‡∏ú‡πà‡∏≤‡∏ô‡∏£‡∏∞‡∏ö‡∏ö Product Card",
                            color=0x3498db
                        )
                        log_embed.add_field(
                            name="üßæ ‡πÄ‡∏•‡∏Ç‡∏ó‡∏µ‡πà‡πÉ‡∏ö‡πÄ‡∏™‡∏£‡πá‡∏à",
                            value=bill_number,
                            inline=True
                        )
                        log_embed.add_field(
                            name="üë§ ‡∏ú‡∏π‡πâ‡∏ã‡∏∑‡πâ‡∏≠",
                            value=f"{interaction.user} ({interaction.user.id})",
                            inline=True
                        )
                        log_embed.add_field(
                            name="üì¶ ‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤",
                            value=f"{self.product.get('‡∏ä‡∏∑‡πà‡∏≠‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤', '')} x {quantity} {self.product.get('‡∏´‡∏ô‡πà‡∏ß‡∏¢', '‡∏ä‡∏¥‡πâ‡∏ô')}",
                            inline=True
                        )
                        log_embed.add_field(
                            name="üí∞ ‡∏¢‡∏≠‡∏î‡∏£‡∏ß‡∏°",
                            value=f"{total_amount:,.0f} ‡∏ö‡∏≤‡∏ó",
                            inline=True
                        )
                        log_embed.add_field(
                            name="üìç ‡∏ä‡πà‡∏≠‡∏á",
                            value=f"{interaction.channel.mention}",
                            inline=True
                        )
                        log_embed.add_field(
                            name="üìÖ ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà",
                            value=f"<t:{int(interaction.created_at.timestamp())}:F>",
                            inline=True
                        )
                        
                        if self.notes.value:
                            log_embed.add_field(
                                name="üìù ‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏´‡∏ï‡∏∏",
                                value=self.notes.value,
                                inline=False
                            )
                        
                        log_embed.set_footer(text=f"‡πÉ‡∏ö‡πÄ‡∏™‡∏£‡πá‡∏à‡πÄ‡∏•‡∏Ç‡∏ó‡∏µ‡πà: {bill_number}")
                        
                        await bill_channel.send(embed=log_embed)
                        print(f"‚úÖ ‡∏™‡πà‡∏á‡∏•‡πá‡∏≠‡∏Å‡πÉ‡∏ö‡πÄ‡∏™‡∏£‡πá‡∏à {bill_number} ‡πÑ‡∏õ‡∏¢‡∏±‡∏á‡∏ä‡πà‡∏≠‡∏á‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÅ‡∏•‡πâ‡∏ß")
                    else:
                        print(f"‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏ä‡πà‡∏≠‡∏á‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÉ‡∏ö‡πÄ‡∏™‡∏£‡πá‡∏à (ID: 1393184006748635156)")
                    
                except Exception as e:
                    print(f"‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏™‡πà‡∏á‡∏•‡πá‡∏≠‡∏Å‡πÑ‡∏õ‡∏¢‡∏±‡∏á‡∏ä‡πà‡∏≠‡∏á‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÉ‡∏ö‡πÄ‡∏™‡∏£‡πá‡∏à‡πÑ‡∏î‡πâ: {e}")
                
                # ‡∏•‡∏ö‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡∏ú‡∏π‡πâ‡∏Ç‡∏≤‡∏¢‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏´‡πâ‡∏≠‡∏á‡∏´‡∏•‡∏±‡∏á‡πÅ‡∏™‡∏î‡∏á‡πÉ‡∏ö‡πÄ‡∏™‡∏£‡πá‡∏à‡∏Å‡∏≤‡∏£‡∏Ç‡∏≤‡∏¢ (Quick Buy)
                await remove_seller_permission(interaction, interaction.user)
                
            else:
                embed = discord.Embed(
                    title="‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î",
                    description="‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÉ‡∏ö‡πÄ‡∏™‡∏£‡πá‡∏à‡πÑ‡∏î‡πâ",
                    color=0xe74c3c
                )
                await interaction.followup.send(embed=embed, ephemeral=True)
                
        except ValueError:
            embed = discord.Embed(
                title="‚ùå ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á",
                description="‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÉ‡∏™‡πà‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á",
                color=0xe74c3c
            )
            await interaction.followup.send(embed=embed, ephemeral=True)
        except Exception as e:
            embed = discord.Embed(
                title="‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î",
                description=f"‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: {str(e)}",
                color=0xe74c3c
            )
            await interaction.followup.send(embed=embed, ephemeral=True)

class CartManageView(discord.ui.View):
    def __init__(self, user_id, timeout=300):
        super().__init__(timeout=timeout)
        self.user_id = user_id
    
    @discord.ui.button(label="üí≥ ‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô", style=discord.ButtonStyle.success, emoji="üí≥")
    async def checkout(self, interaction: discord.Interaction, button: discord.ui.Button):
        """‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô"""
        await interaction.response.defer()
        
        # Import ‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏´‡∏•‡∏µ‡∏Å‡πÄ‡∏•‡∏µ‡πà‡∏¢‡∏á circular import
        from bot import user_carts, stock_manager, BILL_HISTORY_CHANNEL_ID
        import datetime
        
        if self.user_id not in user_carts or not user_carts[self.user_id].get_items():
            embed = discord.Embed(
                title="‚ùå ‡∏£‡∏ñ‡πÄ‡∏Ç‡πá‡∏ô‡∏ß‡πà‡∏≤‡∏á‡πÄ‡∏õ‡∏•‡πà‡∏≤",
                description="‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÉ‡∏ô‡∏£‡∏ñ‡πÄ‡∏Ç‡πá‡∏ô‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì",
                color=0xe74c3c
            )
            await interaction.followup.send(embed=embed, ephemeral=True)
            return
        
        cart = user_carts[self.user_id]
        items = cart.get_items()
        
        try:
            # ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏™‡∏ï‡πá‡∏≠‡∏Å‡∏Å‡πà‡∏≠‡∏ô‡∏Ç‡∏≤‡∏¢
            stock_errors = []
            for item in items:
                product = stock_manager.check_stock(item['product_name'])
                if product:
                    available_quantity = int(product.get('‡∏à‡∏≥‡∏ô‡∏ß‡∏ô', 0))
                    if available_quantity < item['quantity']:
                        stock_errors.append(f"‚ùå {item['product_name']}: ‡∏™‡∏ï‡πá‡∏≠‡∏Å‡πÑ‡∏°‡πà‡πÄ‡∏û‡∏µ‡∏¢‡∏á‡∏û‡∏≠ (‡∏°‡∏µ {available_quantity} ‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£ {item['quantity']})")
                else:
                    stock_errors.append(f"‚ùå {item['product_name']}: ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÉ‡∏ô‡∏£‡∏∞‡∏ö‡∏ö")
            
            if stock_errors:
                embed = discord.Embed(
                    title="‚ùå ‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î",
                    description="‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô‡πÑ‡∏î‡πâ‡πÄ‡∏ô‡∏∑‡πà‡∏≠‡∏á‡∏à‡∏≤‡∏Å‡∏°‡∏µ‡∏õ‡∏±‡∏ç‡∏´‡∏≤‡∏Å‡∏±‡∏ö‡∏™‡∏ï‡πá‡∏≠‡∏Å",
                    color=0xe74c3c
                )
                embed.add_field(
                    name="‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏õ‡∏±‡∏ç‡∏´‡∏≤",
                    value="\n".join(stock_errors),
                    inline=False
                )
                await interaction.followup.send(embed=embed, ephemeral=True)
                return
            
            # ‡πÅ‡∏õ‡∏•‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÉ‡∏ö‡πÄ‡∏™‡∏£‡πá‡∏à
            bill_items = []
            for item in items:
                bill_items.append({
                    'name': item['product_name'],
                    'quantity': item['quantity'],
                    'price': item['price'],
                    'unit': item['unit']
                })
            
            # ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÉ‡∏ö‡πÄ‡∏™‡∏£‡πá‡∏à
            bill_number, total_amount = stock_manager.create_bill(
                interaction.user,
                bill_items,
                f"‡∏ä‡∏≥‡∏£‡∏∞‡∏ú‡πà‡∏≤‡∏ô‡∏£‡∏ñ‡πÄ‡∏Ç‡πá‡∏ô - {len(items)} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£"
            )
            
            if bill_number:
                # ‡∏™‡∏£‡πâ‡∏≤‡∏á embed ‡πÉ‡∏ö‡πÄ‡∏™‡∏£‡πá‡∏à
                embed = discord.Embed(
                    title="üßæ ‡πÉ‡∏ö‡πÄ‡∏™‡∏£‡πá‡∏à‡∏Å‡∏≤‡∏£‡∏Ç‡∏≤‡∏¢",
                    description=f"‡πÄ‡∏•‡∏Ç‡∏ó‡∏µ‡πà‡πÉ‡∏ö‡πÄ‡∏™‡∏£‡πá‡∏à: **{bill_number}**",
                    color=0x2ecc71
                )
                
                embed.add_field(
                    name="üë§ ‡∏ú‡∏π‡πâ‡∏ã‡∏∑‡πâ‡∏≠",
                    value=f"{interaction.user.mention}",
                    inline=True
                )
                
                embed.add_field(
                    name="üí∞ ‡∏¢‡∏≠‡∏î‡∏£‡∏ß‡∏°",
                    value=f"{total_amount:,.0f} ‡∏ö‡∏≤‡∏ó",
                    inline=True
                )
                
                # ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤
                items_text = ""
                for item in items:
                    item_total = item['price'] * item['quantity']
                    items_text += f"‚Ä¢ {item['product_name']} x {item['quantity']} {item['unit']} = {item_total:,.0f} ‡∏ö‡∏≤‡∏ó\n"
                
                embed.add_field(
                    name="üì¶ ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤",
                    value=items_text,
                    inline=False
                )
                
                embed.set_footer(text=f"‡πÉ‡∏ö‡πÄ‡∏™‡∏£‡πá‡∏à‡πÄ‡∏•‡∏Ç‡∏ó‡∏µ‡πà: {bill_number}")
                
                await interaction.followup.send(embed=embed, ephemeral=True)
                
                # ‡πÄ‡∏Ñ‡∏•‡∏µ‡∏¢‡∏£‡πå‡∏£‡∏ñ‡πÄ‡∏Ç‡πá‡∏ô
                cart.clear()
                
                # ‡∏™‡πà‡∏á‡∏•‡πá‡∏≠‡∏Å‡πÑ‡∏õ‡∏¢‡∏±‡∏á‡∏ä‡πà‡∏≠‡∏á‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÉ‡∏ö‡πÄ‡∏™‡∏£‡πá‡∏à
                try:
                    # ‡∏™‡πà‡∏á‡πÑ‡∏õ‡∏¢‡∏±‡∏á‡∏ä‡πà‡∏≠‡∏á‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÉ‡∏ö‡πÄ‡∏™‡∏£‡πá‡∏à
                    bill_channel = interaction.client.get_channel(BILL_HISTORY_CHANNEL_ID)
                    if bill_channel:
                        log_embed = discord.Embed(
                            title="üõí ‡∏Å‡∏≤‡∏£‡∏Ç‡∏≤‡∏¢‡∏ú‡πà‡∏≤‡∏ô‡∏£‡∏ñ‡πÄ‡∏Ç‡πá‡∏ô (Shopping Cart)",
                            description=f"‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô‡∏ú‡πà‡∏≤‡∏ô‡∏£‡∏∞‡∏ö‡∏ö‡∏£‡∏ñ‡πÄ‡∏Ç‡πá‡∏ô",
                            color=0x3498db
                        )
                        log_embed.add_field(
                            name="üßæ ‡πÄ‡∏•‡∏Ç‡∏ó‡∏µ‡πà‡πÉ‡∏ö‡πÄ‡∏™‡∏£‡πá‡∏à",
                            value=bill_number,
                            inline=True
                        )
                        log_embed.add_field(
                            name="üë§ ‡∏ú‡∏π‡πâ‡∏ã‡∏∑‡πâ‡∏≠",
                            value=f"{interaction.user} ({interaction.user.id})",
                            inline=True
                        )
                        log_embed.add_field(
                            name="üí∞ ‡∏¢‡∏≠‡∏î‡∏£‡∏ß‡∏°",
                            value=f"{total_amount:,.0f} ‡∏ö‡∏≤‡∏ó",
                            inline=True
                        )
                        log_embed.add_field(
                            name="üì¶ ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£",
                            value=f"{len(items)} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£",
                            inline=True
                        )
                        log_embed.add_field(
                            name="üìç ‡∏ä‡πà‡∏≠‡∏á",
                            value=f"{interaction.channel.mention}",
                            inline=True
                        )
                        log_embed.add_field(
                            name="üìÖ ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà",
                            value=f"<t:{int(interaction.created_at.timestamp())}:F>",
                            inline=True
                        )
                        log_embed.add_field(
                            name="üì¶ ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤",
                            value=items_text,
                            inline=False
                        )
                        log_embed.set_footer(text=f"‡πÉ‡∏ö‡πÄ‡∏™‡∏£‡πá‡∏à‡πÄ‡∏•‡∏Ç‡∏ó‡∏µ‡πà: {bill_number}")
                        
                        await bill_channel.send(embed=log_embed)
                        print(f"‚úÖ ‡∏™‡πà‡∏á‡∏•‡πá‡∏≠‡∏Å‡πÉ‡∏ö‡πÄ‡∏™‡∏£‡πá‡∏à {bill_number} ‡πÑ‡∏õ‡∏¢‡∏±‡∏á‡∏ä‡πà‡∏≠‡∏á‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÅ‡∏•‡πâ‡∏ß")
                    else:
                        print(f"‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏ä‡πà‡∏≠‡∏á‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÉ‡∏ö‡πÄ‡∏™‡∏£‡πá‡∏à (ID: {BILL_HISTORY_CHANNEL_ID})")
                    
                except Exception as e:
                    print(f"‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏™‡πà‡∏á‡∏•‡πá‡∏≠‡∏Å‡πÑ‡∏õ‡∏¢‡∏±‡∏á‡∏ä‡πà‡∏≠‡∏á‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÉ‡∏ö‡πÄ‡∏™‡∏£‡πá‡∏à‡πÑ‡∏î‡πâ: {e}")
                
                # ‡∏•‡∏ö‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡∏ú‡∏π‡πâ‡∏Ç‡∏≤‡∏¢‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏´‡πâ‡∏≠‡∏á‡∏´‡∏•‡∏±‡∏á‡πÅ‡∏™‡∏î‡∏á‡πÉ‡∏ö‡πÄ‡∏™‡∏£‡πá‡∏à‡∏Å‡∏≤‡∏£‡∏Ç‡∏≤‡∏¢ (Cart Checkout)
                await remove_seller_permission(interaction, interaction.user)
                
            else:
                embed = discord.Embed(
                    title="‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î",
                    description="‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÉ‡∏ö‡πÄ‡∏™‡∏£‡πá‡∏à‡πÑ‡∏î‡πâ",
                    color=0xe74c3c
                )
                await interaction.followup.send(embed=embed, ephemeral=True)
                
        except Exception as e:
            embed = discord.Embed(
                title="‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î",
                description=f"‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: {str(e)}",
                color=0xe74c3c
            )
            await interaction.followup.send(embed=embed, ephemeral=True)

class ClearCartConfirmView(discord.ui.View):
    def __init__(self, user_id, timeout=60):
        super().__init__(timeout=timeout)
        self.user_id = user_id
    
    @discord.ui.button(label="‚úÖ ‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡πÄ‡∏Ñ‡∏•‡∏µ‡∏¢‡∏£‡πå", style=discord.ButtonStyle.danger, emoji="‚úÖ")
    async def confirm_clear(self, interaction: discord.Interaction, button: discord.ui.Button):
        """‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡πÄ‡∏Ñ‡∏•‡∏µ‡∏¢‡∏£‡πå‡∏£‡∏ñ‡πÄ‡∏Ç‡πá‡∏ô"""
        await interaction.response.defer()
        
        # Import ‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏´‡∏•‡∏µ‡∏Å‡πÄ‡∏•‡∏µ‡πà‡∏¢‡∏á circular import
        from bot import user_carts
        
        if self.user_id in user_carts:
            user_carts[self.user_id].clear()
            embed = discord.Embed(
                title="‚úÖ ‡πÄ‡∏Ñ‡∏•‡∏µ‡∏¢‡∏£‡πå‡∏£‡∏ñ‡πÄ‡∏Ç‡πá‡∏ô‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à",
                description="‡∏£‡∏ñ‡πÄ‡∏Ç‡πá‡∏ô‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡∏ñ‡∏π‡∏Å‡πÄ‡∏Ñ‡∏•‡∏µ‡∏¢‡∏£‡πå‡πÅ‡∏•‡πâ‡∏ß",
                color=0x2ecc71
            )
        else:
            embed = discord.Embed(
                title="üõí ‡∏£‡∏ñ‡πÄ‡∏Ç‡πá‡∏ô‡∏ß‡πà‡∏≤‡∏á‡πÄ‡∏õ‡∏•‡πà‡∏≤",
                description="‡∏£‡∏ñ‡πÄ‡∏Ç‡πá‡∏ô‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡∏ß‡πà‡∏≤‡∏á‡πÄ‡∏õ‡∏•‡πà‡∏≤‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß",
                color=0xff6b6b
            )
        
        # ‡∏õ‡∏¥‡∏î‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏õ‡∏∏‡πà‡∏°
        for item in self.children:
            item.disabled = True
        
        await interaction.edit_original_response(embed=embed, view=self)
    
    @discord.ui.button(label="‚ùå ‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å", style=discord.ButtonStyle.secondary, emoji="‚ùå")
    async def cancel_clear(self, interaction: discord.Interaction, button: discord.ui.Button):
        """‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡∏Å‡∏≤‡∏£‡πÄ‡∏Ñ‡∏•‡∏µ‡∏¢‡∏£‡πå‡∏£‡∏ñ‡πÄ‡∏Ç‡πá‡∏ô"""
        await interaction.response.defer()
        
        embed = discord.Embed(
            title="‚ùå ‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡∏Å‡∏≤‡∏£‡πÄ‡∏Ñ‡∏•‡∏µ‡∏¢‡∏£‡πå‡∏£‡∏ñ‡πÄ‡∏Ç‡πá‡∏ô",
            description="‡∏£‡∏ñ‡πÄ‡∏Ç‡πá‡∏ô‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡∏¢‡∏±‡∏á‡∏Ñ‡∏á‡πÄ‡∏´‡∏°‡∏∑‡∏≠‡∏ô‡πÄ‡∏î‡∏¥‡∏°",
            color=0x95a5a6
        )
        
        # ‡∏õ‡∏¥‡∏î‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏õ‡∏∏‡πà‡∏°
        for item in self.children:
            item.disabled = True
        
        await interaction.edit_original_response(embed=embed, view=self)
