import discord
from discord.ext import commands
from discord.ui import View, Button, Modal, TextInput, Select
import asyncio
import json
import os
from datetime import datetime
from dotenv import load_dotenv
import gspread
from google.oauth2.service_account import Credentials
from ui.views.product_card_view import ProductCardView
from ui_components import *

# ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ä‡πà‡∏ß‡∏¢‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏•‡∏ö‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡∏ú‡∏π‡πâ‡∏Ç‡∏≤‡∏¢‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏´‡πâ‡∏≠‡∏á‡∏´‡∏•‡∏±‡∏á‡πÅ‡∏™‡∏î‡∏á‡πÉ‡∏ö‡πÄ‡∏™‡∏£‡πá‡∏à‡∏Å‡∏≤‡∏£‡∏Ç‡∏≤‡∏¢
async def remove_seller_permission(ctx, seller_user):
    """‡∏•‡∏ö‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡∏ú‡∏π‡πâ‡∏Ç‡∏≤‡∏¢‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏´‡πâ‡∏≠‡∏á‡∏´‡∏•‡∏±‡∏á‡πÅ‡∏™‡∏î‡∏á‡πÉ‡∏ö‡πÄ‡∏™‡∏£‡πá‡∏à‡∏Å‡∏≤‡∏£‡∏Ç‡∏≤‡∏¢"""
    try:
        # ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡πÄ‡∏õ‡πá‡∏ô‡∏´‡πâ‡∏≠‡∏á‡∏ó‡∏µ‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡πÑ‡∏î‡πâ
        if isinstance(ctx.channel, discord.TextChannel):
            # ‡∏•‡∏ö‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡∏Ç‡∏≠‡∏á‡∏ú‡∏π‡πâ‡∏Ç‡∏≤‡∏¢‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏´‡πâ‡∏≠‡∏á‡∏ô‡∏µ‡πâ
            overwrite = discord.PermissionOverwrite()
            overwrite.view_channel = False
            overwrite.send_messages = False
            overwrite.read_message_history = False
            
            await ctx.channel.set_permissions(seller_user, overwrite=overwrite)
            
            # ‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡πÉ‡∏ô‡∏ä‡πà‡∏≠‡∏á (‡∏ñ‡πâ‡∏≤‡∏à‡∏≥‡πÄ‡∏õ‡πá‡∏ô)
            try:
                embed = discord.Embed(
                    title="üîí ‡∏´‡πâ‡∏≠‡∏á‡∏ñ‡∏π‡∏Å‡∏õ‡∏¥‡∏î‡∏Å‡∏≤‡∏£‡πÄ‡∏Ç‡πâ‡∏≤‡∏ñ‡∏∂‡∏á",
                    description=f"‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡∏Å‡∏≤‡∏£‡πÄ‡∏Ç‡πâ‡∏≤‡∏ñ‡∏∂‡∏á‡∏Ç‡∏≠‡∏á {seller_user.mention} ‡∏ñ‡∏π‡∏Å‡∏•‡∏ö‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏´‡πâ‡∏≠‡∏á‡∏ô‡∏µ‡πâ‡∏´‡∏•‡∏±‡∏á‡∏à‡∏≤‡∏Å‡∏Å‡∏≤‡∏£‡∏Ç‡∏≤‡∏¢‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô",
                    color=0xff6b6b
                )
                embed.add_field(
                    name="üìù ‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏´‡∏ï‡∏∏",
                    value="‡∏ô‡∏µ‡πà‡πÄ‡∏õ‡πá‡∏ô‡∏Å‡∏≤‡∏£‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥‡∏´‡∏•‡∏±‡∏á‡∏à‡∏≤‡∏Å‡πÅ‡∏™‡∏î‡∏á‡πÉ‡∏ö‡πÄ‡∏™‡∏£‡πá‡∏à‡∏Å‡∏≤‡∏£‡∏Ç‡∏≤‡∏¢",
                    inline=False
                )
                await ctx.send(embed=embed)
            except:
                pass  # ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÑ‡∏î‡πâ‡∏Å‡πá‡∏Ç‡πâ‡∏≤‡∏°
            
            print(f"‚úÖ ‡∏•‡∏ö‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡∏ú‡∏π‡πâ‡∏Ç‡∏≤‡∏¢ {seller_user.name} ({seller_user.id}) ‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏´‡πâ‡∏≠‡∏á {ctx.channel.name} ({ctx.channel.id}) ‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß")
            
        else:
            print(f"‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏•‡∏ö‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡πÑ‡∏î‡πâ: ‡∏´‡πâ‡∏≠‡∏á‡∏ô‡∏µ‡πâ‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà TextChannel")
            
    except discord.Forbidden:
        print(f"‚ùå ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡∏Ç‡∏≠‡∏á‡∏´‡πâ‡∏≠‡∏á {ctx.channel.name}")
    except Exception as e:
        print(f"‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏•‡∏ö‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå: {e}")

# ‡πÇ‡∏´‡∏•‡∏î environment variables
load_dotenv()

# ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ Discord bot
intents = discord.Intents.default()
intents.message_content = True
bot = commands.Bot(command_prefix='!', intents=intents)

# ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ Google Sheets
SCOPE = [
    "https://www.googleapis.com/auth/spreadsheets",
    "https://www.googleapis.com/auth/drive.file",
    "https://www.googleapis.com/auth/drive"
]

# ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏Å‡∏≤‡∏£‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô
LOW_STOCK_THRESHOLD = 5

# Dictionary ‡πÄ‡∏Å‡πá‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏ó‡∏µ‡πà‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏£‡∏≠‡∏Å‡∏≤‡∏£‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡∏£‡∏π‡∏õ
pending_image_uploads = {}

# Dictionary ‡πÄ‡∏Å‡πá‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡∏Ç‡∏≤‡∏¢‡∏ó‡∏µ‡πà‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£
active_sales = {}

# Dictionary ‡πÄ‡∏Å‡πá‡∏ö‡∏ä‡πà‡∏≠‡∏á‡πÅ‡∏ä‡∏ó‡∏Å‡∏≤‡∏£‡∏Ç‡∏≤‡∏¢‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ
sales_channels = {}

# ID ‡∏Ç‡∏≠‡∏á‡∏ä‡πà‡∏≠‡∏á‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏ö‡∏¥‡∏•
BILL_HISTORY_CHANNEL_ID = 1393184006748635156

class StockManager:
    def __init__(self):
        self.credentials = None
        self.gc = None
        self.spreadsheet = None
        self.setup_google_sheets()
    
    def setup_google_sheets(self):
        """‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠ Google Sheets"""
        try:
            # ‡πÉ‡∏ä‡πâ credentials.json file
            if os.path.exists('credentials.json'):
                self.credentials = Credentials.from_service_account_file(
                    'credentials.json', scopes=SCOPE)
            else:
                print("‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡πÑ‡∏ü‡∏•‡πå credentials.json")
                return
            
            self.gc = gspread.authorize(self.credentials)
            
            # ‡πÄ‡∏õ‡∏¥‡∏î Google Sheets
            sheets_id = os.getenv('GOOGLE_SHEETS_ID')
            if sheets_id:
                self.spreadsheet = self.gc.open_by_key(sheets_id)
            else:
                sheet_name = os.getenv('GOOGLE_SHEET_NAME', 'CatBot-Stock-Management')
                self.spreadsheet = self.gc.open(sheet_name)
            
            # ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ä‡∏µ‡∏ï‡∏´‡∏≤‡∏Å‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ
            self.setup_sheets()
            print("‚úÖ ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠ Google Sheets ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à")
            
        except Exception as e:
            print(f"‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠ Google Sheets: {e}")
    
    async def upload_image_to_drive(self, image_url, filename):
        """‡πÉ‡∏ä‡πâ Discord CDN ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÄ‡∏Å‡πá‡∏ö‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û"""
        try:
            # ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤ URL ‡πÄ‡∏õ‡πá‡∏ô‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡∏à‡∏≤‡∏Å Discord ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
            if "cdn.discordapp.com" in image_url or "media.discordapp.net" in image_url:
                print(f"‚úÖ ‡πÉ‡∏ä‡πâ Discord CDN ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û: {filename}")
                return image_url
            else:
                print(f"‚ö†Ô∏è URL ‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà Discord CDN: {image_url}")
                return image_url
                
        except Exception as e:
            print(f"‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û: {e}")
            return image_url
    
    def setup_sheets(self):
        """‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ä‡∏µ‡∏ï‡πÅ‡∏•‡∏∞‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏´‡∏±‡∏ß‡∏ï‡∏≤‡∏£‡∏≤‡∏á"""
        try:
            # ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÅ‡∏•‡∏∞‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ä‡∏µ‡∏ï Stock
            try:
                stock_sheet = self.spreadsheet.worksheet('Stock')
                print("‚úÖ ‡∏û‡∏ö‡∏ä‡∏µ‡∏ï Stock ‡πÅ‡∏•‡πâ‡∏ß")
                
                # ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏ä‡∏µ‡∏ï‡∏°‡∏µ‡∏´‡∏±‡∏ß‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
                try:
                    first_row = stock_sheet.row_values(1)
                    if not first_row or len(first_row) < 8 or first_row[0] != 'ID':
                        print("‚ö†Ô∏è ‡∏´‡∏±‡∏ß‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡∏Ç‡∏≠‡∏á‡∏ä‡∏µ‡∏ï Stock ‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç...")
                        stock_sheet.update(
                            range_name='A1:H1',
                            values=[['ID', '‡∏ä‡∏∑‡πà‡∏≠‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤', '‡∏à‡∏≥‡∏ô‡∏ß‡∏ô', '‡∏´‡∏ô‡πà‡∏ß‡∏¢', '‡∏£‡∏≤‡∏Ñ‡∏≤', '‡∏Ñ‡∏≥‡∏≠‡∏ò‡∏¥‡∏ö‡∏≤‡∏¢', '‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏ûURL', '‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î']]
                        )
                        print("‚úÖ ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏´‡∏±‡∏ß‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡∏ä‡∏µ‡∏ï Stock ‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢")
                except Exception as e:
                    print(f"‚ö†Ô∏è ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏´‡∏±‡∏ß‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡∏ä‡∏µ‡∏ï Stock ‡πÑ‡∏î‡πâ: {e}")
                    
            except gspread.WorksheetNotFound:
                print("‚ö†Ô∏è ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏ä‡∏µ‡∏ï Stock ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÉ‡∏´‡∏°‡πà...")
                stock_sheet = self.spreadsheet.add_worksheet(title='Stock', rows=1000, cols=8)
                # ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏´‡∏±‡∏ß‡∏ï‡∏≤‡∏£‡∏≤‡∏á
                stock_sheet.update(
                    range_name='A1:H1',
                    values=[['ID', '‡∏ä‡∏∑‡πà‡∏≠‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤', '‡∏à‡∏≥‡∏ô‡∏ß‡∏ô', '‡∏´‡∏ô‡πà‡∏ß‡∏¢', '‡∏£‡∏≤‡∏Ñ‡∏≤', '‡∏Ñ‡∏≥‡∏≠‡∏ò‡∏¥‡∏ö‡∏≤‡∏¢', '‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏ûURL', '‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î']]
                )
                print("‚úÖ ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ä‡∏µ‡∏ï Stock ‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢")
            
            # ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÅ‡∏•‡∏∞‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ä‡∏µ‡∏ï History
            try:
                history_sheet = self.spreadsheet.worksheet('History')
                print("‚úÖ ‡∏û‡∏ö‡∏ä‡∏µ‡∏ï History ‡πÅ‡∏•‡πâ‡∏ß")
                
                # ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏ä‡∏µ‡∏ï‡∏°‡∏µ‡∏´‡∏±‡∏ß‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
                try:
                    first_row = history_sheet.row_values(1)
                    if not first_row or len(first_row) < 6 or first_row[0] != '‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà':
                        print("‚ö†Ô∏è ‡∏´‡∏±‡∏ß‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡∏Ç‡∏≠‡∏á‡∏ä‡∏µ‡∏ï History ‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç...")
                        history_sheet.update(
                            range_name='A1:F1',
                            values=[['‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà', '‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ', '‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£', '‡∏ä‡∏∑‡πà‡∏≠‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤', '‡∏à‡∏≥‡∏ô‡∏ß‡∏ô', '‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏´‡∏ï‡∏∏']]
                        )
                        print("‚úÖ ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏´‡∏±‡∏ß‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡∏ä‡∏µ‡∏ï History ‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢")
                except Exception as e:
                    print(f"‚ö†Ô∏è ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏´‡∏±‡∏ß‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡∏ä‡∏µ‡∏ï History ‡πÑ‡∏î‡πâ: {e}")
                    
            except gspread.WorksheetNotFound:
                print("‚ö†Ô∏è ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏ä‡∏µ‡∏ï History ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÉ‡∏´‡∏°‡πà...")
                history_sheet = self.spreadsheet.add_worksheet(title='History', rows=1000, cols=6)
                # ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏´‡∏±‡∏ß‡∏ï‡∏≤‡∏£‡∏≤‡∏á
                history_sheet.update(
                    range_name='A1:F1',
                    values=[['‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà', '‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ', '‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£', '‡∏ä‡∏∑‡πà‡∏≠‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤', '‡∏à‡∏≥‡∏ô‡∏ß‡∏ô', '‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏´‡∏ï‡∏∏']]
                )
                print("‚úÖ ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ä‡∏µ‡∏ï History ‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢")
            
            # ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÅ‡∏•‡∏∞‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ä‡∏µ‡∏ï Bills (‡πÉ‡∏ö‡πÄ‡∏™‡∏£‡πá‡∏à)
            try:
                bills_sheet = self.spreadsheet.worksheet('Bills')
                print("‚úÖ ‡∏û‡∏ö‡∏ä‡∏µ‡∏ï Bills ‡πÅ‡∏•‡πâ‡∏ß")
                
                # ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏ä‡∏µ‡∏ï‡∏°‡∏µ‡∏´‡∏±‡∏ß‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
                try:
                    first_row = bills_sheet.row_values(1)
                    if not first_row or len(first_row) < 10 or first_row[0] != '‡πÄ‡∏•‡∏Ç‡∏ó‡∏µ‡πà‡πÉ‡∏ö‡πÄ‡∏™‡∏£‡πá‡∏à':
                        print("‚ö†Ô∏è ‡∏´‡∏±‡∏ß‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡∏Ç‡∏≠‡∏á‡∏ä‡∏µ‡∏ï Bills ‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç...")
                        bills_sheet.update(
                            range_name='A1:J1',
                            values=[['‡πÄ‡∏•‡∏Ç‡∏ó‡∏µ‡πà‡πÉ‡∏ö‡πÄ‡∏™‡∏£‡πá‡∏à', '‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà', '‡∏ú‡∏π‡πâ‡∏Ç‡∏≤‡∏¢', '‡∏ä‡∏∑‡πà‡∏≠‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤', '‡∏à‡∏≥‡∏ô‡∏ß‡∏ô', '‡∏´‡∏ô‡πà‡∏ß‡∏¢', '‡∏£‡∏≤‡∏Ñ‡∏≤‡∏ï‡πà‡∏≠‡∏´‡∏ô‡πà‡∏ß‡∏¢', '‡∏£‡∏≤‡∏Ñ‡∏≤‡∏£‡∏ß‡∏°', '‡∏¢‡∏≠‡∏î‡∏£‡∏ß‡∏°', '‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏´‡∏ï‡∏∏']]
                        )
                        print("‚úÖ ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏´‡∏±‡∏ß‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡∏ä‡∏µ‡∏ï Bills ‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢")
                except Exception as e:
                    print(f"‚ö†Ô∏è ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏´‡∏±‡∏ß‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡∏ä‡∏µ‡∏ï Bills ‡πÑ‡∏î‡πâ: {e}")
                    
            except gspread.WorksheetNotFound:
                print("‚ö†Ô∏è ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏ä‡∏µ‡∏ï Bills ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÉ‡∏´‡∏°‡πà...")
                bills_sheet = self.spreadsheet.add_worksheet(title='Bills', rows=1000, cols=10)
                # ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏´‡∏±‡∏ß‡∏ï‡∏≤‡∏£‡∏≤‡∏á
                bills_sheet.update(
                    range_name='A1:J1',
                    values=[['‡πÄ‡∏•‡∏Ç‡∏ó‡∏µ‡πà‡πÉ‡∏ö‡πÄ‡∏™‡∏£‡πá‡∏à', '‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà', '‡∏ú‡∏π‡πâ‡∏Ç‡∏≤‡∏¢', '‡∏ä‡∏∑‡πà‡∏≠‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤', '‡∏à‡∏≥‡∏ô‡∏ß‡∏ô', '‡∏´‡∏ô‡πà‡∏ß‡∏¢', '‡∏£‡∏≤‡∏Ñ‡∏≤‡∏ï‡πà‡∏≠‡∏´‡∏ô‡πà‡∏ß‡∏¢', '‡∏£‡∏≤‡∏Ñ‡∏≤‡∏£‡∏ß‡∏°', '‡∏¢‡∏≠‡∏î‡∏£‡∏ß‡∏°', '‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏´‡∏ï‡∏∏']]
                )
                print("‚úÖ ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ä‡∏µ‡∏ï Bills ‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢")
                
        except Exception as e:
            print(f"‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ä‡∏µ‡∏ï: {e}")
    
    def add_stock(self, product_name, quantity, unit, user, price=0, description="", image_url=""):
        """‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏ï‡πä‡∏≠‡∏Å"""
        try:
            stock_sheet = self.spreadsheet.worksheet('Stock')
            
            # ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏ä‡∏µ‡∏ï‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
            try:
                existing_products = stock_sheet.get_all_records()
            except Exception as e:
                print(f"‚ö†Ô∏è ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏≠‡πà‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å‡∏ä‡∏µ‡∏ï‡πÑ‡∏î‡πâ: {e}")
                existing_products = []
            
            # ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏ä‡∏µ‡∏ï‡∏°‡∏µ‡∏´‡∏±‡∏ß‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
            if not existing_products:
                # ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡πÅ‡∏ñ‡∏ß‡πÅ‡∏£‡∏Å‡∏°‡∏µ‡∏´‡∏±‡∏ß‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
                try:
                    first_row = stock_sheet.row_values(1)
                    if not first_row or first_row[0] != 'ID':
                        # ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏´‡∏±‡∏ß‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡πÉ‡∏´‡∏°‡πà
                        stock_sheet.clear()
                        stock_sheet.update(
                            range_name='A1:H1',
                            values=[['ID', '‡∏ä‡∏∑‡πà‡∏≠‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤', '‡∏à‡∏≥‡∏ô‡∏ß‡∏ô', '‡∏´‡∏ô‡πà‡∏ß‡∏¢', '‡∏£‡∏≤‡∏Ñ‡∏≤', '‡∏Ñ‡∏≥‡∏≠‡∏ò‡∏¥‡∏ö‡∏≤‡∏¢', '‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏ûURL', '‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î']]
                        )
                        print("‚úÖ ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏´‡∏±‡∏ß‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡πÉ‡∏´‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à")
                except Exception as e:
                    print(f"‚ö†Ô∏è ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏´‡∏±‡∏ß‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡πÑ‡∏î‡πâ: {e}")
                    return False
            
            # ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏≠‡∏¢‡∏π‡πà
            product_found = False
            
            for i, product in enumerate(existing_products):
                try:
                    if product.get('‡∏ä‡∏∑‡πà‡∏≠‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤', '').lower() == product_name.lower():
                        # ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏≠‡∏¢‡∏π‡πà
                        current_quantity = int(product.get('‡∏à‡∏≥‡∏ô‡∏ß‡∏ô', 0))
                        new_quantity = current_quantity + int(quantity)
                        
                        # ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏ô‡∏ä‡∏µ‡∏ï
                        row_number = i + 2  # +2 ‡πÄ‡∏û‡∏£‡∏≤‡∏∞‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏à‡∏≤‡∏Å‡πÅ‡∏ñ‡∏ß‡∏ó‡∏µ‡πà 2 (‡πÅ‡∏ñ‡∏ß 1 ‡πÄ‡∏õ‡πá‡∏ô‡∏´‡∏±‡∏ß‡∏ï‡∏≤‡∏£‡∏≤‡∏á)
                        stock_sheet.update(f'C{row_number}', new_quantity)
                        stock_sheet.update(f'H{row_number}', datetime.now().strftime('%Y-%m-%d %H:%M:%S'))
                        
                        # ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏≠‡∏∑‡πà‡∏ô‡πÜ ‡∏ñ‡πâ‡∏≤‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡πÉ‡∏™‡πà‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏´‡∏°‡πà
                        if price > 0:
                            stock_sheet.update(f'E{row_number}', price)
                        if description:
                            stock_sheet.update(f'F{row_number}', description)
                        if image_url:
                            stock_sheet.update(f'G{row_number}', image_url)
                        
                        product_found = True
                        print(f"‚úÖ ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤ {product_name} ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à")
                        break
                except Exception as e:
                    print(f"‚ö†Ô∏è ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤: {e}")
                    continue
            
            if not product_found:
                try:
                    # ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÉ‡∏´‡∏°‡πà
                    next_row = len(existing_products) + 2
                    new_id = len(existing_products) + 1
                    
                    stock_sheet.update(
                        range_name=f'A{next_row}:H{next_row}',
                        values=[[
                            new_id,
                            product_name,
                            quantity,
                            unit,
                            price,
                            description,
                            image_url,
                            datetime.now().strftime('%Y-%m-%d %H:%M:%S')
                        ]]
                    )
                    print(f"‚úÖ ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÉ‡∏´‡∏°‡πà {product_name} ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à")
                except Exception as e:
                    print(f"‚ö†Ô∏è ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÉ‡∏´‡∏°‡πà: {e}")
                    return False
            
            # ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥
            try:
                self.add_history(user, '‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤', product_name, quantity, f'‡∏´‡∏ô‡πà‡∏ß‡∏¢: {unit}, ‡∏£‡∏≤‡∏Ñ‡∏≤: {price}')
            except Exception as e:
                print(f"‚ö†Ô∏è ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥: {e}")
            
            return True
            
        except Exception as e:
            print(f"‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤: {e}")
            return False
    
    def remove_stock(self, product_name, quantity, user):
        """‡∏•‡∏î‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏à‡∏≤‡∏Å‡∏™‡∏ï‡πä‡∏≠‡∏Å"""
        try:
            stock_sheet = self.spreadsheet.worksheet('Stock')
            existing_products = stock_sheet.get_all_records()
            
            for i, product in enumerate(existing_products):
                if product['‡∏ä‡∏∑‡πà‡∏≠‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤'].lower() == product_name.lower():
                    current_quantity = int(product['‡∏à‡∏≥‡∏ô‡∏ß‡∏ô'])
                    new_quantity = max(0, current_quantity - int(quantity))
                    
                    stock_sheet.update(f'C{i+2}', new_quantity)
                    stock_sheet.update(f'H{i+2}', datetime.now().strftime('%Y-%m-%d %H:%M:%S'))
                    
                    # ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥
                    self.add_history(user, '‡∏•‡∏î‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤', product_name, quantity, f'‡∏Ñ‡∏á‡πÄ‡∏´‡∏•‡∏∑‡∏≠: {new_quantity}')
                    
                    return True, new_quantity
            
            return False, 0
            
        except Exception as e:
            print(f"‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏•‡∏î‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤: {e}")
            return False, 0
    
    def check_stock(self, product_name):
        """‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤"""
        try:
            stock_sheet = self.spreadsheet.worksheet('Stock')
            existing_products = stock_sheet.get_all_records()
            
            for product in existing_products:
                if product['‡∏ä‡∏∑‡πà‡∏≠‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤'].lower() == product_name.lower():
                    return product
            
            return None
            
        except Exception as e:
            print(f"‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤: {e}")
            return None
    
    def get_all_stock(self):
        """‡∏î‡∏∂‡∏á‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î"""
        try:
            stock_sheet = self.spreadsheet.worksheet('Stock')
            return stock_sheet.get_all_records()
        except Exception as e:
            print(f"‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏î‡∏∂‡∏á‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤: {e}")
            return []
    
    def get_history(self, limit=10):
        """‡∏î‡∏∂‡∏á‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£"""
        try:
            history_sheet = self.spreadsheet.worksheet('History')
            records = history_sheet.get_all_records()
            return records[-limit:] if len(records) > limit else records
        except Exception as e:
            print(f"‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏î‡∏∂‡∏á‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥: {e}")
            return []
    
    def add_history(self, user, action, product_name, quantity, note):
        """‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£"""
        try:
            history_sheet = self.spreadsheet.worksheet('History')
            
            # ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏ä‡∏µ‡∏ï‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
            try:
                existing_records = history_sheet.get_all_records()
                next_row = len(existing_records) + 2
            except Exception as e:
                print(f"‚ö†Ô∏è ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏≠‡πà‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å‡∏ä‡∏µ‡∏ï History ‡πÑ‡∏î‡πâ: {e}")
                # ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏ä‡∏µ‡∏ï‡∏°‡∏µ‡∏´‡∏±‡∏ß‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
                try:
                    first_row = history_sheet.row_values(1)
                    if not first_row or first_row[0] != '‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà':
                        # ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏´‡∏±‡∏ß‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡πÉ‡∏´‡∏°‡πà
                        history_sheet.clear()
                        history_sheet.update(
                            range_name='A1:F1',
                            values=[['‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà', '‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ', '‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£', '‡∏ä‡∏∑‡πà‡∏≠‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤', '‡∏à‡∏≥‡∏ô‡∏ß‡∏ô', '‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏´‡∏ï‡∏∏']]
                        )
                        next_row = 2
                    else:
                        next_row = 2
                except Exception as e2:
                    print(f"‚ö†Ô∏è ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏´‡∏±‡∏ß‡∏ï‡∏≤‡∏£‡∏≤‡∏á History ‡πÑ‡∏î‡πâ: {e2}")
                    return
            
            # ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏´‡∏°‡πà
            history_sheet.update(
                range_name=f'A{next_row}:F{next_row}',
                values=[[
                    datetime.now().strftime('%Y-%m-%d %H:%M:%S'),
                    str(user),
                    action,
                    product_name,
                    quantity,
                    note
                ]]
            )
            print(f"‚úÖ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à: {action} {product_name}")
            
        except Exception as e:
            print(f"‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥: {e}")
    
    def check_low_stock(self):
        """‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ï‡πà‡∏≥"""
        try:
            stock_sheet = self.spreadsheet.worksheet('Stock')
            existing_products = stock_sheet.get_all_records()
            
            low_stock_items = []
            for product in existing_products:
                if int(product['‡∏à‡∏≥‡∏ô‡∏ß‡∏ô']) < LOW_STOCK_THRESHOLD:
                    low_stock_items.append(product)
            
            return low_stock_items
            
        except Exception as e:
            print(f"‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏ï‡πà‡∏≥: {e}")
            return []
    
    def generate_bill_number(self):
        """‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÄ‡∏•‡∏Ç‡∏ó‡∏µ‡πà‡πÉ‡∏ö‡πÄ‡∏™‡∏£‡πá‡∏à"""
        try:
            bills_sheet = self.spreadsheet.worksheet('Bills')
            records = bills_sheet.get_all_records()
            
            # ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÄ‡∏•‡∏Ç‡∏ó‡∏µ‡πà‡πÉ‡∏ö‡πÄ‡∏™‡∏£‡πá‡∏à‡πÉ‡∏ô‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö YYYYMMDD-XXX
            today = datetime.now().strftime('%Y%m%d')
            today_bills = [record for record in records if record['‡πÄ‡∏•‡∏Ç‡∏ó‡∏µ‡πà‡πÉ‡∏ö‡πÄ‡∏™‡∏£‡πá‡∏à'].startswith(today)]
            
            next_number = len(today_bills) + 1
            bill_number = f"{today}-{next_number:03d}"
            
            return bill_number
            
        except Exception as e:
            print(f"‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÄ‡∏•‡∏Ç‡∏ó‡∏µ‡πà‡πÉ‡∏ö‡πÄ‡∏™‡∏£‡πá‡∏à: {e}")
            return f"{datetime.now().strftime('%Y%m%d')}-001"
    
    def create_bill(self, seller, items, notes=""):
        """‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÉ‡∏ö‡πÄ‡∏™‡∏£‡πá‡∏à"""
        try:
            bills_sheet = self.spreadsheet.worksheet('Bills')
            bill_number = self.generate_bill_number()
            
            total_amount = 0
            current_date = datetime.now().strftime('%Y-%m-%d %H:%M:%S')
            
            # ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÉ‡∏ô‡πÉ‡∏ö‡πÄ‡∏™‡∏£‡πá‡∏à
            for item in items:
                product_name = item['name']
                quantity = item['quantity']
                unit_price = item['price']
                unit = item['unit']
                item_total = quantity * unit_price
                total_amount += item_total
                
                # ‡∏•‡∏î‡∏™‡∏ï‡πá‡∏≠‡∏Å‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤
                self.remove_stock(product_name, quantity, seller)
                
                # ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡πÉ‡∏ô‡∏ä‡∏µ‡∏ï Bills
                try:
                    existing_records = bills_sheet.get_all_records()
                    next_row = len(existing_records) + 2
                except:
                    next_row = 2
                
                bills_sheet.update(
                    range_name=f'A{next_row}:J{next_row}',
                    values=[[
                        bill_number,
                        current_date,
                        str(seller),
                        product_name,
                        quantity,
                        unit,
                        unit_price,
                        item_total,
                        total_amount if item == items[-1] else "",  # ‡πÅ‡∏™‡∏î‡∏á‡∏¢‡∏≠‡∏î‡∏£‡∏ß‡∏°‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏ö‡∏£‡∏£‡∏ó‡∏±‡∏î‡∏™‡∏∏‡∏î‡∏ó‡πâ‡∏≤‡∏¢
                        notes if item == items[-1] else ""  # ‡πÅ‡∏™‡∏î‡∏á‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏´‡∏ï‡∏∏‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏ö‡∏£‡∏£‡∏ó‡∏±‡∏î‡∏™‡∏∏‡∏î‡∏ó‡πâ‡∏≤‡∏¢
                    ]]
                )
            
            # ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡∏Ç‡∏≤‡∏¢
            item_names = [item['name'] for item in items]
            self.add_history(seller, '‡∏Å‡∏≤‡∏£‡∏Ç‡∏≤‡∏¢', ', '.join(item_names), len(items), f'‡πÉ‡∏ö‡πÄ‡∏™‡∏£‡πá‡∏à: {bill_number}, ‡∏¢‡∏≠‡∏î‡∏£‡∏ß‡∏°: {total_amount:,.0f}')
            
            return bill_number, total_amount
            
        except Exception as e:
            print(f"‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÉ‡∏ö‡πÄ‡∏™‡∏£‡πá‡∏à: {e}")
            return None, 0
    
    def get_bill_details(self, bill_number):
        """‡∏î‡∏∂‡∏á‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡πÉ‡∏ö‡πÄ‡∏™‡∏£‡πá‡∏à"""
        try:
            bills_sheet = self.spreadsheet.worksheet('Bills')
            records = bills_sheet.get_all_records()
            
            bill_items = []
            for record in records:
                if record['‡πÄ‡∏•‡∏Ç‡∏ó‡∏µ‡πà‡πÉ‡∏ö‡πÄ‡∏™‡∏£‡πá‡∏à'] == bill_number:
                    bill_items.append(record)
            
            return bill_items
            
        except Exception as e:
            print(f"‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏î‡∏∂‡∏á‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡πÉ‡∏ö‡πÄ‡∏™‡∏£‡πá‡∏à: {e}")
            return []

class Cart:
    def __init__(self):
        self.items = []  # ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÉ‡∏ô‡∏£‡∏ñ‡πÄ‡∏Ç‡πá‡∏ô

    def add_item(self, product_name, quantity, price, unit):
        self.items.append({
            'product_name': product_name,
            'quantity': quantity,
            'price': price,
            'unit': unit
        })

    def clear(self):
        self.items = []

    def get_total(self):
        return sum(item['price'] * item['quantity'] for item in self.items)

    def get_items(self):
        return self.items

user_carts = {}

# ‡∏™‡∏£‡πâ‡∏≤‡∏á instance ‡∏Ç‡∏≠‡∏á StockManager
stock_manager = StockManager()

@bot.event
async def on_ready():
    print(f'‚úÖ Bot {bot.user} ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!')
    print(f'üîó ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏Å‡∏±‡∏ö Google Sheets: {os.getenv("GOOGLE_SHEET_NAME")}')
    
    # ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÉ‡∏Å‡∏•‡πâ‡∏´‡∏°‡∏î‡∏ó‡∏∏‡∏Å 30 ‡∏ô‡∏≤‡∏ó‡∏µ
    bot.loop.create_task(low_stock_checker())
    
    # ‡∏•‡∏ö‡∏ä‡πà‡∏≠‡∏á‡πÅ‡∏ä‡∏ó‡∏Å‡∏≤‡∏£‡∏Ç‡∏≤‡∏¢‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡πÅ‡∏•‡πâ‡∏ß
    bot.loop.create_task(cleanup_sales_channels())

async def low_stock_checker():
    """‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÉ‡∏Å‡∏•‡πâ‡∏´‡∏°‡∏î‡πÅ‡∏•‡∏∞‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥"""
    while True:
        try:
            await asyncio.sleep(1800)  # 30 ‡∏ô‡∏≤‡∏ó‡∏µ
            
            low_stock_items = stock_manager.check_low_stock()
            
            if low_stock_items:
                for guild in bot.guilds:
                    for channel in guild.text_channels:
                        if channel.name in ['general', 'stock', '‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô']:
                            embed = discord.Embed(
                                title="‚ö†Ô∏è ‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÉ‡∏Å‡∏•‡πâ‡∏´‡∏°‡∏î",
                                description="‡∏°‡∏µ‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÉ‡∏Å‡∏•‡πâ‡∏´‡∏°‡∏î‡πÅ‡∏•‡πâ‡∏ß ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏ï‡∏¥‡∏°‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤",
                                color=0xe74c3c
                            )
                            
                            for product in low_stock_items:
                                embed.add_field(
                                    name=f"üî¥ {product.get('‡∏ä‡∏∑‡πà‡∏≠‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤', '‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏‡∏ä‡∏∑‡πà‡∏≠')}",
                                    value=f"‡∏à‡∏≥‡∏ô‡∏ß‡∏ô: {product.get('‡∏à‡∏≥‡∏ô‡∏ß‡∏ô', 0)} {product.get('‡∏´‡∏ô‡πà‡∏ß‡∏¢', '‡∏ä‡∏¥‡πâ‡∏ô')}",
                                    inline=True
                                )
                            
                            await channel.send(embed=embed)
                            break
                        
        except Exception as e:
            print(f"‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÉ‡∏Å‡∏•‡πâ‡∏´‡∏°‡∏î: {e}")

async def create_sales_channel(guild, user):
    """‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ä‡πà‡∏≠‡∏á‡πÅ‡∏ä‡∏ó‡∏Å‡∏≤‡∏£‡∏Ç‡∏≤‡∏¢‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ"""
    try:
        # ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏°‡∏µ‡∏ä‡πà‡∏≠‡∏á‡πÅ‡∏ä‡∏ó‡∏Å‡∏≤‡∏£‡∏Ç‡∏≤‡∏¢‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
        existing_channel = None
        for channel in guild.text_channels:
            if channel.name == f"‡∏Å‡∏≤‡∏£‡∏Ç‡∏≤‡∏¢-{user.name.lower()}":
                existing_channel = channel
                break
        
        if existing_channel:
            # ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡πÄ‡∏Ç‡πâ‡∏≤‡∏ä‡πà‡∏≠‡∏á‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏≠‡∏¢‡∏π‡πà
            await existing_channel.set_permissions(user, read_messages=True, send_messages=True)
            return existing_channel
        
        # ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ä‡πà‡∏≠‡∏á‡πÅ‡∏ä‡∏ó‡πÉ‡∏´‡∏°‡πà
        overwrites = {
            guild.default_role: discord.PermissionOverwrite(read_messages=False),
            user: discord.PermissionOverwrite(read_messages=True, send_messages=True),
            guild.me: discord.PermissionOverwrite(read_messages=True, send_messages=True)
        }
        
        channel = await guild.create_text_channel(
            name=f"‡∏Å‡∏≤‡∏£‡∏Ç‡∏≤‡∏¢-{user.name.lower()}",
            overwrites=overwrites,
            topic=f"‡∏´‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏Ç‡∏≤‡∏¢‡∏™‡πà‡∏ß‡∏ô‡∏ï‡∏±‡∏ß‡∏Ç‡∏≠‡∏á {user.display_name}",
            reason=f"‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏´‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏Ç‡∏≤‡∏¢‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö {user}"
        )
        
        # ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏ä‡πà‡∏≠‡∏á‡πÅ‡∏ä‡∏ó‡πÉ‡∏ô‡∏£‡∏∞‡∏ö‡∏ö
        sales_channels[user.id] = channel.id
        
        # ‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ï‡πâ‡∏≠‡∏ô‡∏£‡∏±‡∏ö‡πÅ‡∏•‡∏∞‡πÄ‡∏°‡∏ô‡∏π‡∏Å‡∏≤‡∏£‡∏Ç‡∏≤‡∏¢
        embed = discord.Embed(
            title="üõí ‡∏´‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏Ç‡∏≤‡∏¢‡∏™‡πà‡∏ß‡∏ô‡∏ï‡∏±‡∏ß",
            description=f"‡∏¢‡∏¥‡∏ô‡∏î‡∏µ‡∏ï‡πâ‡∏≠‡∏ô‡∏£‡∏±‡∏ö‡∏™‡∏π‡πà‡∏´‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏Ç‡∏≤‡∏¢‡∏Ç‡∏≠‡∏á {user.mention}",
            color=0x2ecc71
        )
        embed.add_field(
            name="üìã ‡∏Ñ‡∏≥‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô",
            value="""
            ‚Ä¢ ‡πÉ‡∏ä‡πâ‡∏õ‡∏∏‡πà‡∏° "üõí ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡∏Ç‡∏≤‡∏¢" ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏Ç‡∏≤‡∏¢‡πÉ‡∏´‡∏°‡πà
            ‚Ä¢ ‡πÉ‡∏ä‡πâ‡∏õ‡∏∏‡πà‡∏° "üìã ‡∏î‡∏π‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡∏Ç‡∏≤‡∏¢" ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏î‡∏π‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡∏Ç‡∏≤‡∏¢
            ‚Ä¢ ‡∏´‡πâ‡∏≠‡∏á‡∏ô‡∏µ‡πâ‡∏à‡∏∞‡∏ñ‡∏π‡∏Å‡∏•‡∏ö‡∏´‡∏•‡∏±‡∏á‡∏à‡∏≤‡∏Å 24 ‡∏ä‡∏±‡πà‡∏ß‡πÇ‡∏°‡∏á‡∏´‡∏≤‡∏Å‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô
            """,
            inline=False
        )
        embed.add_field(
            name="üîí ‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏õ‡πá‡∏ô‡∏™‡πà‡∏ß‡∏ô‡∏ï‡∏±‡∏ß",
            value="‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏Ñ‡∏∏‡∏ì‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô‡∏ó‡∏µ‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏´‡πá‡∏ô‡πÅ‡∏•‡∏∞‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏´‡πâ‡∏≠‡∏á‡∏ô‡∏µ‡πâ‡πÑ‡∏î‡πâ",
            inline=False
        )
        
        await channel.send(embed=embed, view=SalesChannelView(stock_manager))
        
        return channel
        
    except Exception as e:
        print(f"‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ä‡πà‡∏≠‡∏á‡πÅ‡∏ä‡∏ó‡∏Å‡∏≤‡∏£‡∏Ç‡∏≤‡∏¢: {e}")
        return None

async def cleanup_sales_channels():
    """‡∏•‡∏ö‡∏ä‡πà‡∏≠‡∏á‡πÅ‡∏ä‡∏ó‡∏Å‡∏≤‡∏£‡∏Ç‡∏≤‡∏¢‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡πÅ‡∏•‡πâ‡∏ß"""
    while True:
        try:
            await asyncio.sleep(3600)  # ‡∏ó‡∏∏‡∏Å 1 ‡∏ä‡∏±‡πà‡∏ß‡πÇ‡∏°‡∏á
            
            for guild in bot.guilds:
                for channel in guild.text_channels:
                    if channel.name.startswith("‡∏Å‡∏≤‡∏£‡∏Ç‡∏≤‡∏¢-"):
                        # ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÑ‡∏´‡∏£‡πà
                        try:
                            last_message = None
                            async for message in channel.history(limit=1):
                                last_message = message
                                break
                            
                            if last_message:
                                # ‡∏•‡∏ö‡∏ä‡πà‡∏≠‡∏á‡πÅ‡∏ä‡∏ó‡∏´‡∏≤‡∏Å‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏°‡∏≤‡∏ô‡∏≤‡∏ô‡∏Å‡∏ß‡πà‡∏≤ 24 ‡∏ä‡∏±‡πà‡∏ß‡πÇ‡∏°‡∏á
                                time_diff = discord.utils.utcnow() - last_message.created_at
                                if time_diff.total_seconds() > 86400:  # 24 ‡∏ä‡∏±‡πà‡∏ß‡πÇ‡∏°‡∏á
                                    await channel.delete(reason="‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏°‡∏≤‡∏ô‡∏≤‡∏ô‡∏Å‡∏ß‡πà‡∏≤ 24 ‡∏ä‡∏±‡πà‡∏ß‡πÇ‡∏°‡∏á")
                                    print(f"‚úÖ ‡∏•‡∏ö‡∏ä‡πà‡∏≠‡∏á‡πÅ‡∏ä‡∏ó‡∏Å‡∏≤‡∏£‡∏Ç‡∏≤‡∏¢: {channel.name}")
                        except Exception as e:
                            print(f"‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ä‡πà‡∏≠‡∏á‡πÅ‡∏ä‡∏ó {channel.name}: {e}")
                        
        except Exception as e:
            print(f"‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏•‡∏ö‡∏ä‡πà‡∏≠‡∏á‡πÅ‡∏ä‡∏ó‡∏Å‡∏≤‡∏£‡∏Ç‡∏≤‡∏¢: {e}")
            await asyncio.sleep(3600)  # ‡∏£‡∏≠ 1 ‡∏ä‡∏±‡πà‡∏ß‡πÇ‡∏°‡∏á‡∏Å‡πà‡∏≠‡∏ô‡∏•‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà
            
@bot.command(name='add')
async def add_stock(ctx, product_name: str, quantity: int, unit: str, price: float = 0):
    """‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏ï‡πä‡∏≠‡∏Å"""
    if stock_manager.add_stock(product_name, quantity, unit, ctx.author, price, "", ""):
        embed = discord.Embed(
            title="‚úÖ ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à",
            description=f"‡πÄ‡∏û‡∏¥‡πà‡∏° **{product_name}** ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô **{quantity} {unit}** ‡πÅ‡∏•‡πâ‡∏ß",
            color=0x2ecc71
        )
        if price > 0:
            embed.add_field(name="üí∞ ‡∏£‡∏≤‡∏Ñ‡∏≤", value=f"{price:,.0f}", inline=True)
        embed.set_footer(text=f"‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£‡πÇ‡∏î‡∏¢ {ctx.author}")
        await ctx.send(embed=embed, view=AdvancedStockView(stock_manager))
    else:
        embed = discord.Embed(
            title="‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î",
            description="‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÑ‡∏î‡πâ",
            color=0xe74c3c
        )
        await ctx.send(embed=embed)

@bot.command(name='remove')
async def remove_stock(ctx, product_name: str, quantity: int):
    """‡∏•‡∏î‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏à‡∏≤‡∏Å‡∏™‡∏ï‡πä‡∏≠‡∏Å"""
    success, remaining = stock_manager.remove_stock(product_name, quantity, ctx.author)
    
    if success:
        embed = discord.Embed(
            title="‚úÖ ‡∏•‡∏î‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à",
            description=f"‡∏•‡∏î **{product_name}** ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô **{quantity}** ‡πÅ‡∏•‡πâ‡∏ß\n‡∏Ñ‡∏á‡πÄ‡∏´‡∏•‡∏∑‡∏≠: **{remaining}**",
            color=0x2ecc71
        )
        
        if remaining < LOW_STOCK_THRESHOLD:
            embed.add_field(
                name="‚ö†Ô∏è ‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô",
                value="‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÉ‡∏Å‡∏•‡πâ‡∏´‡∏°‡∏î‡πÅ‡∏•‡πâ‡∏ß ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏ï‡∏¥‡∏°‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤",
                inline=False
            )
        
        embed.set_footer(text=f"‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£‡πÇ‡∏î‡∏¢ {ctx.author}")
        await ctx.send(embed=embed, view=AdvancedStockView(stock_manager))
    else:
        embed = discord.Embed(
            title="‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î",
            description=f"‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤ **{product_name}** ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏•‡∏î‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÑ‡∏î‡πâ",
            color=0xe74c3c
        )
        await ctx.send(embed=embed)

@bot.command(name='check')
async def check_stock(ctx, product_name: str):
    """‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤"""
    product = stock_manager.check_stock(product_name)
    
    if product:
        quantity = int(product.get('‡∏à‡∏≥‡∏ô‡∏ß‡∏ô', 0))
        status_emoji = "‚ö†Ô∏è" if quantity < LOW_STOCK_THRESHOLD else "‚úÖ"
        price = float(product.get('‡∏£‡∏≤‡∏Ñ‡∏≤', 0)) if product.get('‡∏£‡∏≤‡∏Ñ‡∏≤') else 0
        
        embed = discord.Embed(
            title=f"{status_emoji} {product.get('‡∏ä‡∏∑‡πà‡∏≠‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤', '‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏‡∏ä‡∏∑‡πà‡∏≠')}",
            color=0xe74c3c if quantity < LOW_STOCK_THRESHOLD else 0x2ecc71
        )
        
        embed.add_field(name="‡∏à‡∏≥‡∏ô‡∏ß‡∏ô", value=f"{quantity} {product.get('‡∏´‡∏ô‡πà‡∏ß‡∏¢', '‡∏ä‡∏¥‡πâ‡∏ô')}", inline=True)
        if price > 0:
            embed.add_field(name="‡∏£‡∏≤‡∏Ñ‡∏≤", value=f"{price:,.0f}", inline=True)
        embed.add_field(name="‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î", value=product.get('‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î', '‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏'), inline=True)
        
        if product.get('‡∏Ñ‡∏≥‡∏≠‡∏ò‡∏¥‡∏ö‡∏≤‡∏¢'):
            embed.add_field(name="‡∏Ñ‡∏≥‡∏≠‡∏ò‡∏¥‡∏ö‡∏≤‡∏¢", value=product.get('‡∏Ñ‡∏≥‡∏≠‡∏ò‡∏¥‡∏ö‡∏≤‡∏¢'), inline=False)
        
        if product.get('‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏ûURL'):
            embed.set_image(url=product.get('‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏ûURL'))
        
        if quantity < LOW_STOCK_THRESHOLD:
            embed.add_field(
                name="‚ö†Ô∏è ‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô",
                value="‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÉ‡∏Å‡∏•‡πâ‡∏´‡∏°‡∏î‡πÅ‡∏•‡πâ‡∏ß",
                inline=False
            )
        
        await ctx.send(embed=embed, view=AdvancedStockView(stock_manager))
    else:
        embed = discord.Embed(
            title="‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤",
            description=f"‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤ **{product_name}** ‡πÉ‡∏ô‡∏£‡∏∞‡∏ö‡∏ö",
            color=0xe74c3c
        )
        await ctx.send(embed=embed)

@bot.command(name='list')
async def list_stock(ctx):
    """‡πÅ‡∏™‡∏î‡∏á‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î"""
    products = stock_manager.get_all_stock()
    
    if not products:
        embed = discord.Embed(
            title="üì¶ ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤",
            description="‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÉ‡∏ô‡∏£‡∏∞‡∏ö‡∏ö",
            color=0xff6b6b
        )
    else:
        embed = discord.Embed(
            title="üì¶ ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î",
            color=0x4ecdc4
        )
        
        for product in products:
            quantity = int(product.get('‡∏à‡∏≥‡∏ô‡∏ß‡∏ô', 0))
            status_emoji = "‚ö†Ô∏è" if quantity < LOW_STOCK_THRESHOLD else "‚úÖ"
            price = float(product.get('‡∏£‡∏≤‡∏Ñ‡∏≤', 0)) if product.get('‡∏£‡∏≤‡∏Ñ‡∏≤') else 0
            
            value_text = f"‡∏à‡∏≥‡∏ô‡∏ß‡∏ô: {quantity} {product.get('‡∏´‡∏ô‡πà‡∏ß‡∏¢', '‡∏ä‡∏¥‡πâ‡∏ô')}"
            if price > 0:
                value_text += f"\n‡∏£‡∏≤‡∏Ñ‡∏≤: {price:,.0f}"
            value_text += f"\n‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï: {product.get('‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î', '‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏')}"
            
            embed.add_field(
                name=f"{status_emoji} {product.get('‡∏ä‡∏∑‡πà‡∏≠‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤', '‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏‡∏ä‡∏∑‡πà‡∏≠')}",
                value=value_text,
                inline=True
            )
    
    await ctx.send(embed=embed, view=AdvancedStockView(stock_manager))

@bot.command(name='history')
async def show_history(ctx):
    """‡πÅ‡∏™‡∏î‡∏á‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£"""
    history = stock_manager.get_history(10)
    
    if not history:
        embed = discord.Embed(
            title="üìã ‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£",
            description="‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£",
            color=0xff6b6b
        )
    else:
        embed = discord.Embed(
            title="üìã ‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£ (10 ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î)",
            color=0xfeca57
        )
        
        for record in reversed(history):
            embed.add_field(
                name=f"{record.get('‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£', '‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏')} - {record.get('‡∏ä‡∏∑‡πà‡∏≠‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤', '‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏')}",
                value=f"‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ: {record.get('‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ', '‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏')}\n‡∏à‡∏≥‡∏ô‡∏ß‡∏ô: {record.get('‡∏à‡∏≥‡∏ô‡∏ß‡∏ô', 0)}\n‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà: {record.get('‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà', '‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏')}\n‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏´‡∏ï‡∏∏: {record.get('‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏´‡∏ï‡∏∏', '‡πÑ‡∏°‡πà‡∏°‡∏µ')}",
                inline=False
            )
    
    await ctx.send(embed=embed, view=AdvancedStockView(stock_manager))

@bot.command(name='products')
async def show_products(ctx):
    """‡πÅ‡∏™‡∏î‡∏á‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡πÄ‡∏õ‡πá‡∏ô card"""
    products = stock_manager.get_all_stock()
    
    if not products:
        embed = discord.Embed(
            title="üì¶ ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤",
            description="‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÉ‡∏ô‡∏£‡∏∞‡∏ö‡∏ö",
            color=0xff6b6b
        )
        await ctx.send(embed=embed)
        return
    
    # ‡∏™‡πà‡∏á‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡πá‡∏ô card
    for product in products:
        quantity = int(product.get('‡∏à‡∏≥‡∏ô‡∏ß‡∏ô', 0))
        status_emoji = "‚ö†Ô∏è" if quantity < LOW_STOCK_THRESHOLD else "‚úÖ"
        price = float(product.get('‡∏£‡∏≤‡∏Ñ‡∏≤', 0)) if product.get('‡∏£‡∏≤‡∏Ñ‡∏≤') else 0
        
        embed = discord.Embed(
            title=f"{status_emoji} {product.get('‡∏ä‡∏∑‡πà‡∏≠‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤', '‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏‡∏ä‡∏∑‡πà‡∏≠')}",
            color=0xe74c3c if quantity < LOW_STOCK_THRESHOLD else 0x2ecc71
        )
        
        # ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏û‡∏∑‡πâ‡∏ô‡∏ê‡∏≤‡∏ô
        embed.add_field(
            name="üì¶ ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô",
            value=f"{quantity} {product.get('‡∏´‡∏ô‡πà‡∏ß‡∏¢', '‡∏ä‡∏¥‡πâ‡∏ô')}",
            inline=True
        )
        
        if price > 0:
            embed.add_field(
                name="üí∞ ‡∏£‡∏≤‡∏Ñ‡∏≤",
                value=f"{price:,.0f} ‡∏ö‡∏≤‡∏ó",
                inline=True
            )
        
        embed.add_field(
            name="üÜî ID",
            value=f"#{product.get('ID', 'N/A')}",
            inline=True
        )
        
        # ‡∏Ñ‡∏≥‡∏≠‡∏ò‡∏¥‡∏ö‡∏≤‡∏¢
        if product.get('‡∏Ñ‡∏≥‡∏≠‡∏ò‡∏¥‡∏ö‡∏≤‡∏¢'):
            embed.add_field(
                name="üìù ‡∏Ñ‡∏≥‡∏≠‡∏ò‡∏¥‡∏ö‡∏≤‡∏¢",
                value=product.get('‡∏Ñ‡∏≥‡∏≠‡∏ò‡∏¥‡∏ö‡∏≤‡∏¢'),
                inline=False
            )
        
        # ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï
        embed.add_field(
            name="üïí ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î",
            value=product.get('‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î', '‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏'),
            inline=False
        )
        
        # ‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û
        if product.get('‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏ûURL'):
            embed.set_image(url=product.get('‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏ûURL'))
        
        # ‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏™‡∏ï‡πá‡∏≠‡∏Å‡∏ï‡πà‡∏≥
        if quantity < LOW_STOCK_THRESHOLD:
            embed.add_field(
                name="‚ö†Ô∏è ‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô",
                value="‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÉ‡∏Å‡∏•‡πâ‡∏´‡∏°‡∏î‡πÅ‡∏•‡πâ‡∏ß",
                inline=False
            )
        
        # ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤
        if quantity == 0:
            embed.add_field(
                name="üö´ ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞",
                value="‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏´‡∏°‡∏î",
                inline=False
            )
            embed.color = 0x95a5a6
        
        # ‡∏™‡πà‡∏á‡πÄ‡∏õ‡πá‡∏ô card ‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏õ‡∏∏‡πà‡∏°
        await ctx.send(embed=embed, view=ProductCardView(product, stock_manager))
        
        # ‡∏£‡∏≠‡πÄ‡∏•‡πá‡∏Å‡∏ô‡πâ‡∏≠‡∏¢‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÑ‡∏°‡πà‡πÉ‡∏´‡πâ spam
        await asyncio.sleep(0.5)

@bot.command(name='product')
async def show_product(ctx, *, product_name: str):
    """‡πÅ‡∏™‡∏î‡∏á‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡πá‡∏ô card"""
    product = stock_manager.check_stock(product_name)
    
    if not product:
        embed = discord.Embed(
            title="‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤",
            description=f"‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤ **{product_name}** ‡πÉ‡∏ô‡∏£‡∏∞‡∏ö‡∏ö",
            color=0xe74c3c
        )
        await ctx.send(embed=embed)
        return
    
    quantity = int(product.get('‡∏à‡∏≥‡∏ô‡∏ß‡∏ô', 0))
    status_emoji = "‚ö†Ô∏è" if quantity < LOW_STOCK_THRESHOLD else "‚úÖ"
    price = float(product.get('‡∏£‡∏≤‡∏Ñ‡∏≤', 0)) if product.get('‡∏£‡∏≤‡∏Ñ‡∏≤') else 0
    
    embed = discord.Embed(
        title=f"{status_emoji} {product.get('‡∏ä‡∏∑‡πà‡∏≠‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤', '‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏‡∏ä‡∏∑‡πà‡∏≠')}",
        color=0xe74c3c if quantity < LOW_STOCK_THRESHOLD else 0x2ecc71
    )
    
    # ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏û‡∏∑‡πâ‡∏ô‡∏ê‡∏≤‡∏ô
    embed.add_field(
        name="üì¶ ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô",
        value=f"{quantity} {product.get('‡∏´‡∏ô‡πà‡∏ß‡∏¢', '‡∏ä‡∏¥‡πâ‡∏ô')}",
        inline=True
    )
    
    if price > 0:
        embed.add_field(
            name="üí∞ ‡∏£‡∏≤‡∏Ñ‡∏≤",
            value=f"{price:,.0f} ‡∏ö‡∏≤‡∏ó",
            inline=True
        )
    
    embed.add_field(
        name="üÜî ID",
        value=f"#{product.get('ID', 'N/A')}",
        inline=True
    )
    
    # ‡∏Ñ‡∏≥‡∏≠‡∏ò‡∏¥‡∏ö‡∏≤‡∏¢
    if product.get('‡∏Ñ‡∏≥‡∏≠‡∏ò‡∏¥‡∏ö‡∏≤‡∏¢'):
        embed.add_field(
            name="üìù ‡∏Ñ‡∏≥‡∏≠‡∏ò‡∏¥‡∏ö‡∏≤‡∏¢",
            value=product.get('‡∏Ñ‡∏≥‡∏≠‡∏ò‡∏¥‡∏ö‡∏≤‡∏¢'),
            inline=False
        )
    
    # ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï
    embed.add_field(
        name="üïí ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î",
        value=product.get('‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î', '‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏'),
        inline=False
    )
    
    # ‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û
    if product.get('‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏ûURL'):
        embed.set_image(url=product.get('‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏ûURL'))
    
    # ‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏™‡∏ï‡πá‡∏≠‡∏Å‡∏ï‡πà‡∏≥
    if quantity < LOW_STOCK_THRESHOLD:
        embed.add_field(
            name="‚ö†Ô∏è ‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô",
            value="‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÉ‡∏Å‡∏•‡πâ‡∏´‡∏°‡∏î‡πÅ‡∏•‡πâ‡∏ß",
            inline=False
        )
    
    # ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤
    if quantity == 0:
        embed.add_field(
            name="üö´ ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞",
            value="‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏´‡∏°‡∏î",
            inline=False
        )
        embed.color = 0x95a5a6
    
    # ‡∏™‡πà‡∏á‡πÄ‡∏õ‡πá‡∏ô card ‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏õ‡∏∏‡πà‡∏°
    await ctx.send(embed=embed, view=ProductCardView(product, stock_manager))

@bot.command(name='stock')
async def stock_menu(ctx):
    """‡πÅ‡∏™‡∏î‡∏á‡πÄ‡∏°‡∏ô‡∏π‡∏´‡∏•‡∏±‡∏Å‡∏Ç‡∏≠‡∏á‡∏£‡∏∞‡∏ö‡∏ö‡∏™‡∏ï‡πä‡∏≠‡∏Å"""
    embed = discord.Embed(
        title="üè™ ‡∏£‡∏∞‡∏ö‡∏ö‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏™‡∏ï‡πä‡∏≠‡∏Å‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤",
        description="‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏ü‡∏µ‡πÄ‡∏à‡∏≠‡∏£‡πå‡∏î‡πâ‡∏≤‡∏ô‡∏•‡πà‡∏≤‡∏á",
        color=0x3498db
    )
    
    embed.add_field(
        name="üìù ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏û‡∏∑‡πâ‡∏ô‡∏ê‡∏≤‡∏ô",
        value="""
        `!add [‡∏ä‡∏∑‡πà‡∏≠‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤] [‡∏à‡∏≥‡∏ô‡∏ß‡∏ô] [‡∏´‡∏ô‡πà‡∏ß‡∏¢] [‡∏£‡∏≤‡∏Ñ‡∏≤]` - ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤
        `!remove [‡∏ä‡∏∑‡πà‡∏≠‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤] [‡∏à‡∏≥‡∏ô‡∏ß‡∏ô]` - ‡∏•‡∏î‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤
        `!check [‡∏ä‡∏∑‡πà‡∏≠‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤]` - ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤
        `!list` - ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
        `!history` - ‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£
        `!upload_help` - ‡∏ß‡∏¥‡∏ò‡∏µ‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û
        """,
        inline=False
    )
    
    embed.add_field(
        name="üõí ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏Å‡∏≤‡∏£‡∏Ç‡∏≤‡∏¢‡πÉ‡∏´‡∏°‡πà",
        value="""
        `!products` - ‡πÅ‡∏™‡∏î‡∏á‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡πÄ‡∏õ‡πá‡∏ô card
        `!product [‡∏ä‡∏∑‡πà‡∏≠‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤]` - ‡πÅ‡∏™‡∏î‡∏á‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡πÄ‡∏õ‡πá‡∏ô card
        `!add_to_cart [‡∏ä‡∏∑‡πà‡∏≠‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤] [‡∏à‡∏≥‡∏ô‡∏ß‡∏ô]` - ‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏Ç‡πâ‡∏≤‡∏£‡∏ñ‡πÄ‡∏Ç‡πá‡∏ô
        `!cart` - ‡∏î‡∏π‡∏£‡∏ñ‡πÄ‡∏Ç‡πá‡∏ô
        `!checkout` - ‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô
        `!clear_cart` - ‡πÄ‡∏Ñ‡∏•‡∏µ‡∏¢‡∏£‡πå‡∏£‡∏ñ‡πÄ‡∏Ç‡πá‡∏ô
        """,
        inline=False
    )
    
    embed.add_field(
        name="üîó ‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠",
        value=f"Google Sheets: {os.getenv('GOOGLE_SHEET_NAME')}",
        inline=False
    )
    
    embed.set_footer(text="‡πÉ‡∏ä‡πâ‡∏õ‡∏∏‡πà‡∏°‡∏î‡πâ‡∏≤‡∏ô‡∏•‡πà‡∏≤‡∏á‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏Ç‡πâ‡∏≤‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏£‡∏ß‡∏î‡πÄ‡∏£‡πá‡∏ß")
    
    await ctx.send(embed=embed, view=AdvancedStockView(stock_manager))

# Error handling
@bot.event
async def on_command_error(ctx, error):
    if isinstance(error, commands.MissingRequiredArgument):
        embed = discord.Embed(
            title="‚ùå ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏°‡πà‡∏Ñ‡∏£‡∏ö‡∏ñ‡πâ‡∏ß‡∏ô",
            description="‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÉ‡∏™‡πà‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏´‡πâ‡∏Ñ‡∏£‡∏ö‡∏ñ‡πâ‡∏ß‡∏ô",
            color=0xe74c3c
        )
        await ctx.send(embed=embed)
    elif isinstance(error, commands.BadArgument):
        embed = discord.Embed(
            title="‚ùå ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á",
            description="‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡πÉ‡∏™‡πà",
            color=0xe74c3c
        )
        await ctx.send(embed=embed)
    else:
        print(f"Error: {error}")

# Help command
@bot.command(name='manual')
async def help_command(ctx):
    """‡πÅ‡∏™‡∏î‡∏á‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î"""
    embed = discord.Embed(
        title="üìö ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î",
        description="‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡πÑ‡∏î‡πâ‡πÉ‡∏ô‡∏£‡∏∞‡∏ö‡∏ö",
        color=0x9b59b6
    )
    
    embed.add_field(
        name="üîß ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏´‡∏•‡∏±‡∏Å",
        value="""
        `!stock` - ‡πÅ‡∏™‡∏î‡∏á‡πÄ‡∏°‡∏ô‡∏π‡∏´‡∏•‡∏±‡∏Å
        `!add [‡∏ä‡∏∑‡πà‡∏≠‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤] [‡∏à‡∏≥‡∏ô‡∏ß‡∏ô] [‡∏´‡∏ô‡πà‡∏ß‡∏¢] [‡∏£‡∏≤‡∏Ñ‡∏≤]` - ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤
        `!remove [‡∏ä‡∏∑‡πà‡∏≠‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤] [‡∏à‡∏≥‡∏ô‡∏ß‡∏ô]` - ‡∏•‡∏î‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤
        `!check [‡∏ä‡∏∑‡πà‡∏≠‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤]` - ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤
        `!list` - ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
        `!history` - ‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£
        `!upload_help` - ‡∏ß‡∏¥‡∏ò‡∏µ‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û
        """,
        inline=False
    )
    
    embed.add_field(
        name="ÔøΩ ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏Å‡∏≤‡∏£‡∏Ç‡∏≤‡∏¢‡πÉ‡∏´‡∏°‡πà",
        value="""
        `!products` - ‡πÅ‡∏™‡∏î‡∏á‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡πÄ‡∏õ‡πá‡∏ô card
        `!product [‡∏ä‡∏∑‡πà‡∏≠‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤]` - ‡πÅ‡∏™‡∏î‡∏á‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡πÄ‡∏õ‡πá‡∏ô card
        `!add_to_cart [‡∏ä‡∏∑‡πà‡∏≠‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤] [‡∏à‡∏≥‡∏ô‡∏ß‡∏ô]` - ‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏Ç‡πâ‡∏≤‡∏£‡∏ñ‡πÄ‡∏Ç‡πá‡∏ô
        `!cart` - ‡∏î‡∏π‡∏£‡∏ñ‡πÄ‡∏Ç‡πá‡∏ô
        `!checkout` - ‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô
        `!clear_cart` - ‡πÄ‡∏Ñ‡∏•‡∏µ‡∏¢‡∏£‡πå‡∏£‡∏ñ‡πÄ‡∏Ç‡πá‡∏ô
        """,
        inline=False
    )
    
    embed.add_field(
        name="üßæ ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡πÉ‡∏ö‡πÄ‡∏™‡∏£‡πá‡∏à",
        value="""
        `!bill [‡πÄ‡∏•‡∏Ç‡∏ó‡∏µ‡πà‡πÉ‡∏ö‡πÄ‡∏™‡∏£‡πá‡∏à]` - ‡∏î‡∏π‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡πÉ‡∏ö‡πÄ‡∏™‡∏£‡πá‡∏à
        `!sales` - ‡πÄ‡∏°‡∏ô‡∏π‡∏Å‡∏≤‡∏£‡∏Ç‡∏≤‡∏¢
        """,
        inline=False
    )
    
    embed.add_field(
        name="ÔøΩüí° ‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô",
        value="""
        `!add ‡∏õ‡∏≤‡∏Å‡∏Å‡∏≤ 10 ‡∏î‡πâ‡∏≤‡∏° 15` - ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏õ‡∏≤‡∏Å‡∏Å‡∏≤ 10 ‡∏î‡πâ‡∏≤‡∏° ‡∏£‡∏≤‡∏Ñ‡∏≤ 15 ‡∏ö‡∏≤‡∏ó
        `!product ‡∏õ‡∏≤‡∏Å‡∏Å‡∏≤` - ‡∏î‡∏π‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏õ‡∏≤‡∏Å‡∏Å‡∏≤‡πÅ‡∏ö‡∏ö card
        `!add_to_cart ‡∏õ‡∏≤‡∏Å‡∏Å‡∏≤ 2` - ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏õ‡∏≤‡∏Å‡∏Å‡∏≤ 2 ‡∏î‡πâ‡∏≤‡∏° ‡πÄ‡∏Ç‡πâ‡∏≤‡∏£‡∏ñ‡πÄ‡∏Ç‡πá‡∏ô
        `upload: ‡∏õ‡∏≤‡∏Å‡∏Å‡∏≤` + ‡πÅ‡∏ô‡∏ö‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û - ‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡∏£‡∏π‡∏õ‡∏õ‡∏≤‡∏Å‡∏Å‡∏≤
        """,
        inline=False
    )
    
    embed.add_field(
        name="üéØ ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡πÉ‡∏´‡∏°‡πà‡∏ó‡∏µ‡πà‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥",
        value="""
        ‚Ä¢ `!products` - ‡∏î‡∏π‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡πÅ‡∏ö‡∏ö card ‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏õ‡∏∏‡πà‡∏°‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠
        ‚Ä¢ `!product [‡∏ä‡∏∑‡πà‡∏≠‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤]` - ‡∏î‡∏π‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡πÅ‡∏ö‡∏ö card
        ‚Ä¢ ‡∏Å‡∏≤‡∏£‡∏ã‡∏∑‡πâ‡∏≠‡∏ú‡πà‡∏≤‡∏ô‡∏õ‡∏∏‡πà‡∏°: ‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏Ç‡πâ‡∏≤‡∏£‡∏ñ‡πÄ‡∏Ç‡πá‡∏ô, ‡∏ã‡∏∑‡πâ‡∏≠‡∏ó‡∏±‡∏ô‡∏ó‡∏µ, ‡∏î‡∏π‡∏£‡∏ñ‡πÄ‡∏Ç‡πá‡∏ô, ‡πÄ‡∏Ñ‡∏•‡∏µ‡∏¢‡∏£‡πå‡∏£‡∏ñ‡πÄ‡∏Ç‡πá‡∏ô
        """,
        inline=False
    )
    
    embed.set_footer(text="‡∏£‡∏∞‡∏ö‡∏ö‡∏à‡∏∞‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡∏ô‡πâ‡∏≠‡∏¢‡∏Å‡∏ß‡πà‡∏≤ 5 ‡∏ä‡∏¥‡πâ‡∏ô")
    
    await ctx.send(embed=embed, view=AdvancedStockView(stock_manager))

@bot.command(name='upload_help')
async def upload_help(ctx):
    """‡πÅ‡∏™‡∏î‡∏á‡∏ß‡∏¥‡∏ò‡∏µ‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤"""
    embed = discord.Embed(
        title="üì∏ ‡∏ß‡∏¥‡∏ò‡∏µ‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤",
        description="‡∏Ñ‡∏≥‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤ (‡πÉ‡∏ä‡πâ Discord CDN)",
        color=0x3498db
    )
    
    embed.add_field(
        name="üîß ‡∏ß‡∏¥‡∏ò‡∏µ‡∏ó‡∏µ‡πà 1: ‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤",
        value="""
        1. ‡πÉ‡∏ä‡πâ‡∏õ‡∏∏‡πà‡∏° "‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÉ‡∏´‡∏°‡πà" ‡∏à‡∏≤‡∏Å‡πÄ‡∏°‡∏ô‡∏π‡∏´‡∏•‡∏±‡∏Å
        2. ‡∏Å‡∏£‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤ (‡∏ä‡∏∑‡πà‡∏≠, ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô, ‡∏´‡∏ô‡πà‡∏ß‡∏¢, ‡∏£‡∏≤‡∏Ñ‡∏≤, ‡∏Ñ‡∏≥‡∏≠‡∏ò‡∏¥‡∏ö‡∏≤‡∏¢)
        3. ‡∏™‡πà‡∏á‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡πÉ‡∏ô‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ñ‡∏±‡∏î‡πÑ‡∏õ
        """,
        inline=False
    )
    
    embed.add_field(
        name="üîß ‡∏ß‡∏¥‡∏ò‡∏µ‡∏ó‡∏µ‡πà 2: ‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡πÉ‡∏´‡πâ‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏≠‡∏¢‡∏π‡πà",
        value="""
        1. ‡∏û‡∏¥‡∏°‡∏û‡πå `upload: ‡∏ä‡∏∑‡πà‡∏≠‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤` 
        2. ‡πÅ‡∏ô‡∏ö‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡πÉ‡∏ô‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏î‡∏µ‡∏¢‡∏ß‡∏Å‡∏±‡∏ô
        3. ‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°
        """,
        inline=False
    )
    
    embed.add_field(
        name="üí° ‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á",
        value="`upload: ‡∏õ‡∏≤‡∏Å‡∏Å‡∏≤` (‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÅ‡∏ô‡∏ö‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û)",
        inline=False
    )
    
    embed.add_field(
        name="üìÅ ‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö‡πÑ‡∏ü‡∏•‡πå",
        value="JPG, PNG, GIF, WEBP",
        inline=True
    )
    
    embed.add_field(
        name="üîó Discord CDN",
        value="‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡∏à‡∏∞‡∏ñ‡∏π‡∏Å‡πÄ‡∏Å‡πá‡∏ö‡πÑ‡∏ß‡πâ‡πÉ‡∏ô Discord CDN ‡πÇ‡∏î‡∏¢‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥",
        inline=True
    )
    
    embed.add_field(
        name="‚ú® ‡∏Ç‡πâ‡∏≠‡∏î‡∏µ",
        value="‚Ä¢ ‡πÑ‡∏°‡πà‡∏à‡∏≥‡∏Å‡∏±‡∏î‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏ó‡∏µ‡πà\n‚Ä¢ ‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏£‡πá‡∏ß‡∏™‡∏π‡∏á\n‚Ä¢ ‡πÄ‡∏™‡∏ñ‡∏µ‡∏¢‡∏£‡∏†‡∏≤‡∏û‡∏î‡∏µ",
        inline=False
    )
    
    await ctx.send(embed=embed)

@bot.command(name='bill')
async def view_bill(ctx, bill_number: str):
    """‡∏î‡∏π‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡πÉ‡∏ö‡πÄ‡∏™‡∏£‡πá‡∏à"""
    try:
        bill_items = stock_manager.get_bill_details(bill_number)
        
        if not bill_items:
            embed = discord.Embed(
                title="‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡πÉ‡∏ö‡πÄ‡∏™‡∏£‡πá‡∏à",
                description=f"‡πÑ‡∏°‡πà‡∏û‡∏ö‡πÉ‡∏ö‡πÄ‡∏™‡∏£‡πá‡∏à‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏•‡∏Ç **{bill_number}**",
                color=0xe74c3c
            )
            await ctx.send(embed=embed)
            return
        
        # ‡∏™‡∏£‡πâ‡∏≤‡∏á embed ‡πÅ‡∏™‡∏î‡∏á‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡πÉ‡∏ö‡πÄ‡∏™‡∏£‡πá‡∏à
        embed = discord.Embed(
            title="üßæ ‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡πÉ‡∏ö‡πÄ‡∏™‡∏£‡πá‡∏à",
            description=f"‡πÄ‡∏•‡∏Ç‡∏ó‡∏µ‡πà‡πÉ‡∏ö‡πÄ‡∏™‡∏£‡πá‡∏à: **{bill_number}**",
            color=0x3498db
        )
        
        # ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏±‡πà‡∏ß‡πÑ‡∏õ
        embed.add_field(
            name="üë§ ‡∏ú‡∏π‡πâ‡∏Ç‡∏≤‡∏¢",
            value=bill_items[0]['‡∏ú‡∏π‡πâ‡∏Ç‡∏≤‡∏¢'],
            inline=True
        )
        
        embed.add_field(
            name="üìÖ ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà",
            value=bill_items[0]['‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà'],
            inline=True
        )
        
        # ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤
        items_text = ""
        total_amount = 0
        
        for item in bill_items:
            item_total = float(item['‡∏£‡∏≤‡∏Ñ‡∏≤‡∏£‡∏ß‡∏°']) if item['‡∏£‡∏≤‡∏Ñ‡∏≤‡∏£‡∏ß‡∏°'] else 0
            total_amount += item_total
            
            items_text += f"‚Ä¢ {item['‡∏ä‡∏∑‡πà‡∏≠‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤']} x {item['‡∏à‡∏≥‡∏ô‡∏ß‡∏ô']} {item['‡∏´‡∏ô‡πà‡∏ß‡∏¢']}\n"
            items_text += f"  ‡∏£‡∏≤‡∏Ñ‡∏≤: {float(item['‡∏£‡∏≤‡∏Ñ‡∏≤‡∏ï‡πà‡∏≠‡∏´‡∏ô‡πà‡∏ß‡∏¢']):,.0f} x {item['‡∏à‡∏≥‡∏ô‡∏ß‡∏ô']} = {item_total:,.0f} ‡∏ö‡∏≤‡∏ó\n"
        
        embed.add_field(
            name="üì¶ ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤",
            value=items_text,
            inline=False
        )
        
        embed.add_field(
            name="üí∞ ‡∏¢‡∏≠‡∏î‡∏£‡∏ß‡∏°‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î",
            value=f"{total_amount:,.0f} ‡∏ö‡∏≤‡∏ó",
            inline=False
        )
        
        # ‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏´‡∏ï‡∏∏
        if bill_items[0]['‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏´‡∏ï‡∏∏']:
            embed.add_field(
                name="üìù ‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏´‡∏ï‡∏∏",
                value=bill_items[0]['‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏´‡∏ï‡∏∏'],
                inline=False
            )
        
        embed.set_footer(text=f"‡πÉ‡∏ö‡πÄ‡∏™‡∏£‡πá‡∏à‡πÄ‡∏•‡∏Ç‡∏ó‡∏µ‡πà: {bill_number}")
        
        await ctx.send(embed=embed)
        
        # ‡∏•‡∏ö‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡∏ú‡∏π‡πâ‡∏Ç‡∏≤‡∏¢‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏´‡πâ‡∏≠‡∏á‡∏´‡∏•‡∏±‡∏á‡πÅ‡∏™‡∏î‡∏á‡πÉ‡∏ö‡πÄ‡∏™‡∏£‡πá‡∏à‡∏Å‡∏≤‡∏£‡∏Ç‡∏≤‡∏¢
        await remove_seller_permission(ctx, ctx.author)
        
    except Exception as e:
        embed = discord.Embed(
            title="‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î",
            description=f"‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏ö‡πÄ‡∏™‡∏£‡πá‡∏à‡πÑ‡∏î‡πâ: {str(e)}",
            color=0xe74c3c
        )
        await ctx.send(embed=embed)

@bot.command(name='sales')
async def sales_menu(ctx):
    """‡πÅ‡∏™‡∏î‡∏á‡πÄ‡∏°‡∏ô‡∏π‡∏Å‡∏≤‡∏£‡∏Ç‡∏≤‡∏¢"""
    embed = discord.Embed(
        title="üõí ‡∏£‡∏∞‡∏ö‡∏ö‡∏Å‡∏≤‡∏£‡∏Ç‡∏≤‡∏¢",
        description="‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏ü‡∏µ‡πÄ‡∏à‡∏≠‡∏£‡πå‡∏Å‡∏≤‡∏£‡∏Ç‡∏≤‡∏¢‡∏î‡πâ‡∏≤‡∏ô‡∏•‡πà‡∏≤‡∏á",
        color=0x2ecc71
    )
    
    embed.add_field(
        name="üìù ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏Å‡∏≤‡∏£‡∏Ç‡∏≤‡∏¢",
        value="`!bill [‡πÄ‡∏•‡∏Ç‡∏ó‡∏µ‡πà‡πÉ‡∏ö‡πÄ‡∏™‡∏£‡πá‡∏à]` - ‡∏î‡∏π‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡πÉ‡∏ö‡πÄ‡∏™‡∏£‡πá‡∏à\n`!sales` - ‡πÄ‡∏°‡∏ô‡∏π‡∏Å‡∏≤‡∏£‡∏Ç‡∏≤‡∏¢",
        inline=False
    )
    
    embed.add_field(
        name="üõí ‡∏Å‡∏≤‡∏£‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡∏Ç‡∏≤‡∏¢",
        value="1. ‡∏Ñ‡∏•‡∏¥‡∏Å‡∏õ‡∏∏‡πà‡∏° \"üõí ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡∏Ç‡∏≤‡∏¢\" ‡∏î‡πâ‡∏≤‡∏ô‡∏•‡πà‡∏≤‡∏á\n2. ‡∏£‡∏∞‡∏ö‡∏ö‡∏à‡∏∞‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏´‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏Ç‡∏≤‡∏¢‡∏™‡πà‡∏ß‡∏ô‡∏ï‡∏±‡∏ß‡πÉ‡∏´‡πâ‡∏Ñ‡∏∏‡∏ì\n3. ‡πÉ‡∏ä‡πâ‡πÄ‡∏°‡∏ô‡∏π‡πÉ‡∏ô‡∏´‡πâ‡∏≠‡∏á‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡∏Ç‡∏≤‡∏¢",
        inline=False
    )
    
    embed.add_field(
        name="üìã ‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡∏Ç‡∏≤‡∏¢",
        value=f"‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡∏Ç‡∏≤‡∏¢‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏à‡∏∞‡∏ñ‡∏π‡∏Å‡∏™‡πà‡∏á‡πÑ‡∏õ‡∏¢‡∏±‡∏á <#{BILL_HISTORY_CHANNEL_ID}>",
        inline=False
    )
    
    embed.add_field(
        name="üîí ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏õ‡∏•‡∏≠‡∏î‡∏†‡∏±‡∏¢",
        value="‡∏´‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏Ç‡∏≤‡∏¢‡πÄ‡∏õ‡πá‡∏ô‡∏™‡πà‡∏ß‡∏ô‡∏ï‡∏±‡∏ß ‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏ú‡∏π‡πâ‡∏Ç‡∏≤‡∏¢‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏Ç‡πâ‡∏≤‡∏ñ‡∏∂‡∏á‡πÑ‡∏î‡πâ",
        inline=False
    )
    
    # ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏õ‡∏∏‡πà‡∏°‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡∏Ç‡∏≤‡∏¢
    view = discord.ui.View()
    
    async def create_sales_callback(interaction):
        await interaction.response.defer()
        
        try:
            sales_channel = await create_sales_channel(interaction.guild, interaction.user)
            
            if sales_channel:
                embed = discord.Embed(
                    title="‚úÖ ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏´‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏Ç‡∏≤‡∏¢‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à",
                    description=f"‡∏´‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏Ç‡∏≤‡∏¢‡∏™‡πà‡∏ß‡∏ô‡∏ï‡∏±‡∏ß‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì: {sales_channel.mention}",
                    color=0x2ecc71
                )
                embed.add_field(
                    name="üìã ‡∏Ñ‡∏≥‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥",
                    value="‚Ä¢ ‡∏´‡πâ‡∏≠‡∏á‡∏ô‡∏µ‡πâ‡πÄ‡∏õ‡πá‡∏ô‡∏™‡πà‡∏ß‡∏ô‡∏ï‡∏±‡∏ß‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏Ñ‡∏∏‡∏ì‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô\n‚Ä¢ ‡πÉ‡∏ä‡πâ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡∏Ç‡∏≤‡∏¢‡πÅ‡∏•‡∏∞‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡πÉ‡∏ö‡πÄ‡∏™‡∏£‡πá‡∏à\n‚Ä¢ ‡∏´‡πâ‡∏≠‡∏á‡∏à‡∏∞‡∏ñ‡∏π‡∏Å‡∏•‡∏ö‡∏´‡∏•‡∏±‡∏á‡∏à‡∏≤‡∏Å 24 ‡∏ä‡∏±‡πà‡∏ß‡πÇ‡∏°‡∏á‡∏´‡∏≤‡∏Å‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô",
                    inline=False
                )
                await interaction.followup.send(embed=embed, ephemeral=True)
            else:
                embed = discord.Embed(
                    title="‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î",
                    description="‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏´‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏Ç‡∏≤‡∏¢‡πÑ‡∏î‡πâ",
                    color=0xe74c3c
                )
                await interaction.followup.send(embed=embed, ephemeral=True)
                
        except Exception as e:
            embed = discord.Embed(
                title="‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î",
                description=f"‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏´‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏Ç‡∏≤‡∏¢‡πÑ‡∏î‡πâ: {str(e)}",
                color=0xe74c3c
            )
            await interaction.followup.send(embed=embed, ephemeral=True)
    
    button = discord.ui.Button(
        label="üõí ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡∏Ç‡∏≤‡∏¢",
        style=discord.ButtonStyle.success,
        emoji="üõí"
    )
    button.callback = create_sales_callback
    view.add_item(button)
    
    await ctx.send(embed=embed, view=view)

async def add_item_to_cart_helper(user_id: str, product_name: str, quantity: int):
    """Helper function to add items to cart with validation and return result"""
    if user_id not in user_carts:
        user_carts[user_id] = Cart()
    
    # ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÉ‡∏ô‡∏™‡∏ï‡πá‡∏≠‡∏Å
    products = stock_manager.get_all_stock()
    product_found = False
    
    for product in products:
        if product['‡∏ä‡∏∑‡πà‡∏≠‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤'].lower() == product_name.lower():
            # ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏™‡∏ï‡πá‡∏≠‡∏Å‡πÄ‡∏û‡∏µ‡∏¢‡∏á‡∏û‡∏≠‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
            available_quantity = int(product.get('‡∏à‡∏≥‡∏ô‡∏ß‡∏ô', 0))
            if available_quantity < quantity:
                return {
                    'success': False,
                    'error_type': 'insufficient_stock',
                    'message': f"‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤ **{product_name}** ‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡πÄ‡∏û‡∏µ‡∏¢‡∏á {available_quantity} {product.get('‡∏´‡∏ô‡πà‡∏ß‡∏¢', '‡∏ä‡∏¥‡πâ‡∏ô')}",
                    'available_quantity': available_quantity,
                    'unit': product.get('‡∏´‡∏ô‡πà‡∏ß‡∏¢', '‡∏ä‡∏¥‡πâ‡∏ô')
                }
            
            price = float(product.get('‡∏£‡∏≤‡∏Ñ‡∏≤', 0))
            unit = product.get('‡∏´‡∏ô‡πà‡∏ß‡∏¢', '‡∏ä‡∏¥‡πâ‡∏ô')
            user_carts[user_id].add_item(product_name, quantity, price, unit)
            
            # ‡πÅ‡∏™‡∏î‡∏á‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÉ‡∏ô‡∏£‡∏ñ‡πÄ‡∏Ç‡πá‡∏ô‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
            cart = user_carts[user_id]
            cart_items = cart.get_items()
            total_price = cart.get_total()
            
            # ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÉ‡∏ô‡∏£‡∏ñ‡πÄ‡∏Ç‡πá‡∏ô
            cart_list = ""
            for i, item in enumerate(cart_items, 1):
                item_total = item['price'] * item['quantity']
                cart_list += f"{i}. **{item['product_name']}** x{item['quantity']} {item['unit']} = {item_total:,.0f} ‡∏ö‡∏≤‡∏ó\n"
            
            return {
                'success': True,
                'product_name': product_name,
                'quantity': quantity,
                'cart_items': cart_items,
                'cart_list': cart_list,
                'total_price': total_price
            }
    
    # ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤
    return {
        'success': False,
        'error_type': 'product_not_found',
        'message': f"‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤ **{product_name}** ‡πÉ‡∏ô‡∏£‡∏∞‡∏ö‡∏ö"
    }

@bot.command()
async def add_to_cart(ctx, product_name: str, quantity: int):
    """‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÄ‡∏Ç‡πâ‡∏≤‡∏£‡∏ñ‡πÄ‡∏Ç‡πá‡∏ô‡∏Ç‡∏≠‡∏á‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ"""
    user_id = str(ctx.author.id)
    
    result = await add_item_to_cart_helper(user_id, product_name, quantity)
    
    if result['success']:
        cart_items = result['cart_items']
        total_price = result['total_price']
        
        embed = discord.Embed(
            title="‚úÖ ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏•‡∏á‡∏£‡∏ñ‡πÄ‡∏Ç‡πá‡∏ô‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à",
            description=f"‡πÄ‡∏û‡∏¥‡πà‡∏° **{product_name}** x{quantity} ‡πÄ‡∏Ç‡πâ‡∏≤‡∏£‡∏ñ‡πÄ‡∏Ç‡πá‡∏ô‡πÅ‡∏•‡πâ‡∏ß!",
            color=0x2ecc71
        )
        
        # ‡πÅ‡∏™‡∏î‡∏á‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÉ‡∏ô‡∏£‡∏ñ‡πÄ‡∏Ç‡πá‡∏ô‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
        cart_list = ""
        for i, item in enumerate(cart_items, 1):
            item_total = item['price'] * item['quantity']
            cart_list += f"{i}. **{item['product_name']}** x{item['quantity']} {item['unit']} = {item_total:,.0f} ‡∏ö‡∏≤‡∏ó\n"
        
        embed.add_field(
            name="üõí ‡∏£‡∏ñ‡πÄ‡∏Ç‡πá‡∏ô‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì",
            value=cart_list if cart_list else "‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤",
            inline=False
        )
        
        embed.add_field(
            name="üí∞ ‡∏¢‡∏≠‡∏î‡∏£‡∏ß‡∏°‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î",
            value=f"{total_price:,.0f} ‡∏ö‡∏≤‡∏ó",
            inline=True
        )
        
        embed.add_field(
            name="üì¶ ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£",
            value=f"{len(cart_items)} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£",
            inline=True
        )
        
        embed.add_field(
            name="üí° ‡∏Ñ‡∏≥‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥",
            value="‡πÉ‡∏ä‡πâ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á `!checkout` ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô\n‡πÉ‡∏ä‡πâ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á `!cart` ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏î‡∏π‡∏£‡∏ñ‡πÄ‡∏Ç‡πá‡∏ô\n‡πÉ‡∏ä‡πâ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á `!clear_cart` ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏Ñ‡∏•‡∏µ‡∏¢‡∏£‡πå‡∏£‡∏ñ‡πÄ‡∏Ç‡πá‡∏ô",
            inline=False
        )
        
        await ctx.send(embed=embed)
    else:
        error_message = result['message']
        
        embed = discord.Embed(
            title="‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î",
            description=error_message,
            color=0xe74c3c
        )
        
        if result['error_type'] == 'insufficient_stock':
            available_quantity = result['available_quantity']
            unit = result['unit']
            embed.add_field(
                name="üìâ ‡∏™‡∏ï‡πá‡∏≠‡∏Å‡πÑ‡∏°‡πà‡πÄ‡∏û‡∏µ‡∏¢‡∏á‡∏û‡∏≠",
                value=f"‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤ **{product_name}** ‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡πÄ‡∏û‡∏µ‡∏¢‡∏á {available_quantity} {unit}",
                inline=False
            )
        
        await ctx.send(embed=embed)

@bot.command()
async def checkout(ctx):
    """‡∏≠‡∏≠‡∏Å‡πÉ‡∏ö‡πÄ‡∏™‡∏£‡πá‡∏à‡πÅ‡∏•‡∏∞‡πÄ‡∏Ñ‡∏•‡∏µ‡∏¢‡∏£‡πå‡∏£‡∏ñ‡πÄ‡∏Ç‡πá‡∏ô"""
    user_id = str(ctx.author.id)
    if user_id not in user_carts or not user_carts[user_id].get_items():
        embed = discord.Embed(
            title="‚ùå ‡∏£‡∏ñ‡πÄ‡∏Ç‡πá‡∏ô‡∏ß‡πà‡∏≤‡∏á‡πÄ‡∏õ‡∏•‡πà‡∏≤",
            description="‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÉ‡∏ô‡∏£‡∏ñ‡πÄ‡∏Ç‡πá‡∏ô‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì",
            color=0xe74c3c
        )
        embed.add_field(
            name="üí° ‡∏Ñ‡∏≥‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥",
            value="‡πÉ‡∏ä‡πâ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á `!add_to_cart [‡∏ä‡∏∑‡πà‡∏≠‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤] [‡∏à‡∏≥‡∏ô‡∏ß‡∏ô]` ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤",
            inline=False
        )
        await ctx.send(embed=embed)
        return
    
    cart = user_carts[user_id]
    items = cart.get_items()
    
    try:
        # ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏™‡∏ï‡πá‡∏≠‡∏Å‡∏Å‡πà‡∏≠‡∏ô‡∏Ç‡∏≤‡∏¢
        stock_errors = []
        for item in items:
            product = stock_manager.check_stock(item['product_name'])
            if product:
                available_quantity = int(product.get('‡∏à‡∏≥‡∏ô‡∏ß‡∏ô', 0))
                if available_quantity < item['quantity']:
                    stock_errors.append(f"‚ùå {item['product_name']}: ‡∏™‡∏ï‡πá‡∏≠‡∏Å‡πÑ‡∏°‡πà‡πÄ‡∏û‡∏µ‡∏¢‡∏á‡∏û‡∏≠ (‡∏°‡∏µ {available_quantity} ‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£ {item['quantity']})")
            else:
                stock_errors.append(f"‚ùå {item['product_name']}: ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÉ‡∏ô‡∏£‡∏∞‡∏ö‡∏ö")
        
        if stock_errors:
            embed = discord.Embed(
                title="‚ùå ‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î",
                description="‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô‡πÑ‡∏î‡πâ‡πÄ‡∏ô‡∏∑‡πà‡∏≠‡∏á‡∏à‡∏≤‡∏Å‡∏°‡∏µ‡∏õ‡∏±‡∏ç‡∏´‡∏≤‡∏Å‡∏±‡∏ö‡∏™‡∏ï‡πá‡∏≠‡∏Å",
                color=0xe74c3c
            )
            embed.add_field(
                name="‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏õ‡∏±‡∏ç‡∏´‡∏≤",
                value="\n".join(stock_errors),
                inline=False
            )
            await ctx.send(embed=embed)
            return
        
        # ‡πÅ‡∏õ‡∏•‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÉ‡∏ö‡πÄ‡∏™‡∏£‡πá‡∏à
        bill_items = []
        for item in items:
            bill_items.append({
                'name': item['product_name'],
                'quantity': item['quantity'],
                'price': item['price'],
                'unit': item['unit']
            })
        
        # ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÉ‡∏ö‡πÄ‡∏™‡∏£‡πá‡∏à
        bill_number, total_amount = stock_manager.create_bill(
            ctx.author,
            bill_items,
            f"‡∏ä‡∏≥‡∏£‡∏∞‡∏ú‡πà‡∏≤‡∏ô‡∏£‡∏ñ‡πÄ‡∏Ç‡πá‡∏ô - {len(items)} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£"
        )
        
        if bill_number:
            # ‡∏™‡∏£‡πâ‡∏≤‡∏á embed ‡πÉ‡∏ö‡πÄ‡∏™‡∏£‡πá‡∏à
            embed = discord.Embed(
                title="üßæ ‡πÉ‡∏ö‡πÄ‡∏™‡∏£‡πá‡∏à‡∏Å‡∏≤‡∏£‡∏Ç‡∏≤‡∏¢",
                description=f"‡πÄ‡∏•‡∏Ç‡∏ó‡∏µ‡πà‡πÉ‡∏ö‡πÄ‡∏™‡∏£‡πá‡∏à: **{bill_number}**",
                color=0x2ecc71
            )
            
            embed.add_field(
                name="üë§ ‡∏ú‡∏π‡πâ‡∏ã‡∏∑‡πâ‡∏≠",
                value=f"{ctx.author.mention}",
                inline=True
            )
            
            embed.add_field(
                name="üìÖ ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà",
                value=f"<t:{int(ctx.message.created_at.timestamp())}:F>",
                inline=True
            )
            
            embed.add_field(
                name="üí∞ ‡∏¢‡∏≠‡∏î‡∏£‡∏ß‡∏°",
                value=f"{total_amount:,.0f} ‡∏ö‡∏≤‡∏ó",
                inline=True
            )
            
            # ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤
            items_text = ""
            for item in items:
                item_total = item['price'] * item['quantity']
                items_text += f"‚Ä¢ {item['product_name']} x {item['quantity']} {item['unit']} = {item_total:,.0f} ‡∏ö‡∏≤‡∏ó\n"
            
            embed.add_field(
                name="üì¶ ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤",
                value=items_text,
                inline=False
            )
            
            embed.set_footer(text=f"‡πÉ‡∏ö‡πÄ‡∏™‡∏£‡πá‡∏à‡πÄ‡∏•‡∏Ç‡∏ó‡∏µ‡πà: {bill_number}")
            
            await ctx.send(embed=embed)
            
            # ‡∏™‡πà‡∏á‡∏•‡πá‡∏≠‡∏Å‡πÑ‡∏õ‡∏¢‡∏±‡∏á‡∏ä‡πà‡∏≠‡∏á‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏ö‡∏¥‡∏•‡∏ñ‡πâ‡∏≤‡∏°‡∏µ
            try:
                bill_history_channel = ctx.guild.get_channel(BILL_HISTORY_CHANNEL_ID)
                if bill_history_channel:
                    log_embed = discord.Embed(
                        title="üõí ‡∏Å‡∏≤‡∏£‡∏Ç‡∏≤‡∏¢‡∏ú‡πà‡∏≤‡∏ô‡∏£‡∏ñ‡πÄ‡∏Ç‡πá‡∏ô",
                        description=f"‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô‡∏ú‡πà‡∏≤‡∏ô‡∏£‡∏ñ‡πÄ‡∏Ç‡πá‡∏ô",
                        color=0x3498db
                    )
                    log_embed.add_field(
                        name="üßæ ‡πÄ‡∏•‡∏Ç‡∏ó‡∏µ‡πà‡πÉ‡∏ö‡πÄ‡∏™‡∏£‡πá‡∏à",
                        value=bill_number,
                        inline=True
                    )
                    log_embed.add_field(
                        name="üë§ ‡∏ú‡∏π‡πâ‡∏ã‡∏∑‡πâ‡∏≠",
                        value=f"{ctx.author} ({ctx.author.id})",
                        inline=True
                    )
                    log_embed.add_field(
                        name="üí∞ ‡∏¢‡∏≠‡∏î‡∏£‡∏ß‡∏°",
                        value=f"{total_amount:,.0f} ‡∏ö‡∏≤‡∏ó",
                        inline=True
                    )
                    log_embed.add_field(
                        name="üì¶ ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤",
                        value=items_text,
                        inline=False
                    )
                    log_embed.add_field(
                        name="üìç ‡∏ä‡πà‡∏≠‡∏á",
                        value=f"{ctx.channel.mention}",
                        inline=True
                    )
                    log_embed.add_field(
                        name="üìÖ ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà",
                        value=f"<t:{int(ctx.message.created_at.timestamp())}:F>",
                        inline=True
                    )
                    log_embed.set_footer(text=f"‡πÉ‡∏ö‡πÄ‡∏™‡∏£‡πá‡∏à‡πÄ‡∏•‡∏Ç‡∏ó‡∏µ‡πà: {bill_number}")
                    
                    await bill_history_channel.send(embed=log_embed)
            except Exception as e:
                print(f"‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏™‡πà‡∏á‡∏•‡πá‡∏≠‡∏Å‡πÑ‡∏õ‡∏¢‡∏±‡∏á‡∏ä‡πà‡∏≠‡∏á‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏ö‡∏¥‡∏•‡πÑ‡∏î‡πâ: {e}")
            
            # ‡∏•‡∏ö‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡∏ú‡∏π‡πâ‡∏Ç‡∏≤‡∏¢‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏´‡πâ‡∏≠‡∏á‡∏´‡∏•‡∏±‡∏á‡πÅ‡∏™‡∏î‡∏á‡πÉ‡∏ö‡πÄ‡∏™‡∏£‡πá‡∏à‡∏Å‡∏≤‡∏£‡∏Ç‡∏≤‡∏¢
            await remove_seller_permission(ctx, ctx.author)
            
            # ‡πÄ‡∏Ñ‡∏•‡∏µ‡∏¢‡∏£‡πå‡∏£‡∏ñ‡πÄ‡∏Ç‡πá‡∏ô
            cart.clear()
            
        else:
            embed = discord.Embed(
                title="‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î",
                description="‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÉ‡∏ö‡πÄ‡∏™‡∏£‡πá‡∏à‡πÑ‡∏î‡πâ",
                color=0xe74c3c
            )
            await ctx.send(embed=embed)
            
    except Exception as e:
        embed = discord.Embed(
            title="‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î",
            description=f"‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô‡πÑ‡∏î‡πâ: {str(e)}",
            color=0xe74c3c
        )
        await ctx.send(embed=embed)

@bot.command()
async def cart(ctx):
    """‡∏î‡∏π‡∏£‡∏ñ‡πÄ‡∏Ç‡πá‡∏ô‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏Ç‡∏≠‡∏á‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ"""
    user_id = str(ctx.author.id)
    if user_id not in user_carts or not user_carts[user_id].get_items():
        embed = discord.Embed(
            title="üõí ‡∏£‡∏ñ‡πÄ‡∏Ç‡πá‡∏ô‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì",
            description="‡∏£‡∏ñ‡πÄ‡∏Ç‡πá‡∏ô‡∏ß‡πà‡∏≤‡∏á‡πÄ‡∏õ‡∏•‡πà‡∏≤",
            color=0xff6b6b
        )
        embed.add_field(
            name="üí° ‡∏Ñ‡∏≥‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥",
            value="‡πÉ‡∏ä‡πâ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á `!add_to_cart [‡∏ä‡∏∑‡πà‡∏≠‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤] [‡∏à‡∏≥‡∏ô‡∏ß‡∏ô]` ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤",
            inline=False
        )
        await ctx.send(embed=embed)
        return
    
    cart = user_carts[user_id]
    items = cart.get_items()
    total = cart.get_total()
    
    embed = discord.Embed(
        title="üõí ‡∏£‡∏ñ‡πÄ‡∏Ç‡πá‡∏ô‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì",
        description=f"‡∏°‡∏µ‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤ {len(items)} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£",
        color=0x3498db
    )
    
    for item in items:
        item_total = item['price'] * item['quantity']
        embed.add_field(
            name=f"üì¶ {item['product_name']}",
            value=f"‡∏à‡∏≥‡∏ô‡∏ß‡∏ô: {item['quantity']} {item['unit']}\n‡∏£‡∏≤‡∏Ñ‡∏≤: {item['price']:,.0f} x {item['quantity']} = {item_total:,.0f} ‡∏ö‡∏≤‡∏ó",
            inline=True
        )
    
    embed.add_field(
        name="üí∞ ‡∏¢‡∏≠‡∏î‡∏£‡∏ß‡∏°‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î",
        value=f"{total:,.0f} ‡∏ö‡∏≤‡∏ó",
        inline=False
    )
    
    embed.add_field(
        name="üí° ‡∏Ñ‡∏≥‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥",
        value="‡πÉ‡∏ä‡πâ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á `!checkout` ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô\n‡πÉ‡∏ä‡πâ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á `!clear_cart` ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏Ñ‡∏•‡∏µ‡∏¢‡∏£‡πå‡∏£‡∏ñ‡πÄ‡∏Ç‡πá‡∏ô",
        inline=False
    )
    
    await ctx.send(embed=embed)

@bot.command()
async def clear_cart(ctx):
    """‡πÄ‡∏Ñ‡∏•‡∏µ‡∏¢‡∏£‡πå‡∏£‡∏ñ‡πÄ‡∏Ç‡πá‡∏ô‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏Ç‡∏≠‡∏á‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ"""
    user_id = str(ctx.author.id)
    if user_id not in user_carts or not user_carts[user_id].get_items():
        embed = discord.Embed(
            title="üõí ‡∏£‡∏ñ‡πÄ‡∏Ç‡πá‡∏ô‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì",
            description="‡∏£‡∏ñ‡πÄ‡∏Ç‡πá‡∏ô‡∏ß‡πà‡∏≤‡∏á‡πÄ‡∏õ‡∏•‡πà‡∏≤‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß",
            color=0xff6b6b
        )
        await ctx.send(embed=embed)
        return
    
    user_carts[user_id].clear()
    embed = discord.Embed(
        title="‚úÖ ‡πÄ‡∏Ñ‡∏•‡∏µ‡∏¢‡∏£‡πå‡∏£‡∏ñ‡πÄ‡∏Ç‡πá‡∏ô‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à",
        description="‡∏£‡∏ñ‡πÄ‡∏Ç‡πá‡∏ô‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡∏ñ‡∏π‡∏Å‡∏•‡πâ‡∏≤‡∏á‡πÅ‡∏•‡πâ‡∏ß",
        color=0x2ecc71
    )
    await ctx.send(embed=embed)

# ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡∏£‡∏π‡∏õ‡∏à‡∏≤‡∏Å Discord message
@bot.event
async def on_message(message):
    # ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà bot
    if message.author.bot:
        return
    
    # ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏°‡∏µ‡πÑ‡∏ü‡∏•‡πå‡πÅ‡∏ô‡∏ö‡πÅ‡∏•‡∏∞‡πÄ‡∏õ‡πá‡∏ô‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û
    if message.attachments:
        for attachment in message.attachments:
            if attachment.content_type and attachment.content_type.startswith('image/'):
                # ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç "upload:" ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
                if message.content.startswith('upload:'):
                    try:
                        # ‡∏î‡∏∂‡∏á‡∏ä‡∏∑‡πà‡∏≠‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏à‡∏≤‡∏Å‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°
                        product_name = message.content.replace('upload:', '').strip()
                        
                        if product_name:
                            # ‡πÉ‡∏ä‡πâ Discord CDN ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û
                            filename = f"{product_name}_{attachment.filename}"
                            image_url = await stock_manager.upload_image_to_drive(attachment.url, filename)
                            
                            if image_url:
                                # ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏î‡πâ‡∏ß‡∏¢ URL ‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û
                                products = stock_manager.get_all_stock()
                                for product in products:
                                    if product['‡∏ä‡∏∑‡πà‡∏≠‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤'].lower() == product_name.lower():
                                        # ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï URL ‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡πÉ‡∏ô‡∏ä‡∏µ‡∏ï
                                        stock_sheet = stock_manager.spreadsheet.worksheet('Stock')
                                        existing_products = stock_sheet.get_all_records()
                                        
                                        for i, p in enumerate(existing_products):
                                            if p['‡∏ä‡∏∑‡πà‡∏≠‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤'].lower() == product_name.lower():
                                                stock_sheet.update(f'G{i+2}', image_url)
                                                break
                                        
                                        embed = discord.Embed(
                                            title="‚úÖ ‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à",
                                            description=f"‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤ **{product_name}** ‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß",
                                            color=0x2ecc71
                                        )
                                        embed.add_field(
                                            name="‚ÑπÔ∏è ‡∏£‡∏∞‡∏ö‡∏ö‡∏à‡∏±‡∏î‡πÄ‡∏Å‡πá‡∏ö",
                                            value="‡πÉ‡∏ä‡πâ Discord CDN ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏£‡πá‡∏ß‡πÅ‡∏•‡∏∞‡πÄ‡∏™‡∏ñ‡∏µ‡∏¢‡∏£‡∏†‡∏≤‡∏û",
                                            inline=False
                                        )
                                        embed.set_image(url=image_url)
                                        await message.reply(embed=embed)
                                        break
                                else:
                                    embed = discord.Embed(
                                        title="‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤",
                                        description=f"‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤ **{product_name}** ‡πÉ‡∏ô‡∏£‡∏∞‡∏ö‡∏ö",
                                        color=0xe74c3c
                                    )
                                    await message.reply(embed=embed)
                            else:
                                embed = discord.Embed(
                                    title="‚ùå ‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à",
                                    description="‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û",
                                    color=0xe74c3c
                                )
                                await message.reply(embed=embed)
                        else:
                            embed = discord.Embed(
                                title="üí° ‡∏ß‡∏¥‡∏ò‡∏µ‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û",
                                description="‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÉ‡∏™‡πà‡∏ä‡∏∑‡πà‡∏≠‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏´‡∏•‡∏±‡∏á‡∏à‡∏≤‡∏Å `upload:` ‡πÄ‡∏ä‡πà‡∏ô `upload: ‡∏ä‡∏∑‡πà‡∏≠‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤`",
                                color=0x3498db
                            )
                            await message.reply(embed=embed)
                    except Exception as e:
                        embed = discord.Embed(
                            title="‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î",
                            description=f"‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û: {str(e)}",
                            color=0xe74c3c
                        )
                        await message.reply(embed=embed)
                
                # ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏£‡∏≠‡∏Å‡∏≤‡∏£‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡∏£‡∏π‡∏õ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
                elif str(message.author.id) in pending_image_uploads:
                    try:
                        product_data = pending_image_uploads[str(message.author.id)]
                        product_name = product_data['product_name']
                        
                        # ‡πÉ‡∏ä‡πâ Discord CDN ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û
                        filename = f"{product_name}_{attachment.filename}"
                        image_url = await stock_manager.upload_image_to_drive(attachment.url, filename)
                        
                        if image_url:
                            # ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÉ‡∏´‡∏°‡πà‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û
                            success = stock_manager.add_stock(
                                product_name,
                                product_data['quantity'],
                                product_data['unit'],
                                message.author,
                                product_data['price'],
                                product_data['description'],
                                image_url
                            )
                            
                            if success:
                                embed = discord.Embed(
                                    title="‚úÖ ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à",
                                    description=f"‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤ **{product_name}** ‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß",
                                    color=0x2ecc71
                                )
                                embed.add_field(
                                    name="‚ÑπÔ∏è ‡∏£‡∏∞‡∏ö‡∏ö‡∏à‡∏±‡∏î‡πÄ‡∏Å‡πá‡∏ö",
                                    value="‡πÉ‡∏ä‡πâ Discord CDN ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏£‡πá‡∏ß‡πÅ‡∏•‡∏∞‡πÄ‡∏™‡∏ñ‡∏µ‡∏¢‡∏£‡∏†‡∏≤‡∏û",
                                    inline=False
                                )
                                embed.add_field(name="‡∏à‡∏≥‡∏ô‡∏ß‡∏ô", value=f"{product_data['quantity']} {product_data['unit']}", inline=True)
                                if product_data['price'] > 0:
                                    embed.add_field(name="‡∏£‡∏≤‡∏Ñ‡∏≤", value=f"{product_data['price']:,.0f}", inline=True)
                                if product_data['description']:
                                    embed.add_field(name="‡∏Ñ‡∏≥‡∏≠‡∏ò‡∏¥‡∏ö‡∏≤‡∏¢", value=product_data['description'], inline=False)
                                embed.set_image(url=image_url)
                                embed.set_footer(text=f"‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£‡πÇ‡∏î‡∏¢ {message.author}")
                                await message.reply(embed=embed)
                            else:
                                embed = discord.Embed(
                                    title="‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î",
                                    description="‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÑ‡∏î‡πâ",
                                    color=0xe74c3c
                                )
                                await message.reply(embed=embed)
                        else:
                            embed = discord.Embed(
                                title="‚ùå ‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à",
                                description="‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û",
                                color=0xe74c3c
                            )
                            await message.reply(embed=embed)
                        
                        # ‡∏•‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å pending_image_uploads
                        del pending_image_uploads[str(message.author.id)]
                        
                    except Exception as e:
                        embed = discord.Embed(
                            title="‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î",
                            description=f"‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û: {str(e)}",
                            color=0xe74c3c
                        )
                        await message.reply(embed=embed)
                        
                        # ‡∏•‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å pending_image_uploads ‡πÅ‡∏°‡πâ‡∏à‡∏∞‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î
                        if str(message.author.id) in pending_image_uploads:
                            del pending_image_uploads[str(message.author.id)]
                
                # ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà‡∏ó‡∏±‡πâ‡∏á‡∏™‡∏≠‡∏á‡∏Å‡∏£‡∏ì‡∏µ‡∏Ç‡πâ‡∏≤‡∏á‡∏ï‡πâ‡∏ô ‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥
                else:
                    # ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á
                    if not message.content.startswith('!'):
                        embed = discord.Embed(
                            title="üì∏ ‡∏û‡∏ö‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û",
                            description="‡∏´‡∏≤‡∏Å‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤ ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÉ‡∏ä‡πâ‡∏ß‡∏¥‡∏ò‡∏µ‡πÉ‡∏î‡∏ß‡∏¥‡∏ò‡∏µ‡∏´‡∏ô‡∏∂‡πà‡∏á‡∏ï‡πà‡∏≠‡πÑ‡∏õ‡∏ô‡∏µ‡πâ:",
                            color=0x3498db
                        )
                        embed.add_field(
                            name="üîß ‡∏ß‡∏¥‡∏ò‡∏µ‡∏ó‡∏µ‡πà 1",
                            value="‡∏û‡∏¥‡∏°‡∏û‡πå `upload: ‡∏ä‡∏∑‡πà‡∏≠‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤` ‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÅ‡∏ô‡∏ö‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û",
                            inline=False
                        )
                        embed.add_field(
                            name="üÜï ‡∏ß‡∏¥‡∏ò‡∏µ‡∏ó‡∏µ‡πà 2",
                            value="‡πÉ‡∏ä‡πâ‡∏õ‡∏∏‡πà‡∏° '‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÉ‡∏´‡∏°‡πà' ‡∏à‡∏≤‡∏Å‡πÄ‡∏°‡∏ô‡∏π‡∏´‡∏•‡∏±‡∏Å ‡πÅ‡∏•‡πâ‡∏ß‡∏™‡πà‡∏á‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡∏ï‡∏≤‡∏°‡∏Ñ‡∏≥‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥",
                            inline=False
                        )
                        embed.add_field(
                            name="üí° ‡∏Ñ‡∏≥‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥",
                            value="‡∏û‡∏¥‡∏°‡∏û‡πå `!upload_help` ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏î‡∏π‡∏Ñ‡∏≥‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°",
                            inline=False
                        )
                        await message.reply(embed=embed)
    
    # ‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏õ‡∏Å‡∏ï‡∏¥
    await bot.process_commands(message)

# ‡∏£‡∏±‡∏ô bot
if __name__ == "__main__":
    bot.run(os.getenv('DISCORD_TOKEN'))
